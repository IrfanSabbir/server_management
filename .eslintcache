[{"D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\index.js":"1","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\App.js":"2","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\reportWebVitals.js":"3","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\container\\pages\\auth\\login.jsx":"4","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\container\\layout\\Layout.jsx":"5","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\container\\pages\\auth\\signup.jsx":"6","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\container\\layout\\navigation\\Navigation.jsx":"7","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\store\\reducers\\auth.js":"8","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\store\\actions\\actionTypes.js":"9","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\store\\actions\\index.js":"10","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\store\\actions\\auth.js":"11","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\container\\pages\\auth\\logout.jsx":"12","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\container\\pages\\LadingPage.jsx":"13","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\container\\layout\\landingPageLayout.jsx":"14","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\container\\layout\\LandingNav\\Navigations.js":"15","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\container\\pages\\dashboard\\Dashboard.jsx":"16","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\container\\pages\\dashboard\\Packages.jsx":"17","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\container\\pages\\dashboard\\Snapshots.jsx":"18","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\container\\pages\\dashboard\\Profile.jsx":"19","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\container\\pages\\dashboard\\Payments.jsx":"20","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\payment\\Add_payment.jsx":"21","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\payment\\PymnetTable.jsx":"22","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\container\\layout\\navigation\\TopNavigation.jsx":"23","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\profile\\UpdateProfle.jsx":"24","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\profile\\UpdatePassword.jsx":"25","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\servers\\Destroy.jsx":"26","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\servers\\Select_Location.jsx":"27","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\servers\\Snapshot.jsx":"28","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\servers\\Server_Packages.jsx":"29","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\servers\\Server_Inputs.jsx":"30","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\servers\\Expiredate_Update.jsx":"31","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\servers\\Server_Details.jsx":"32","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\store\\actions\\server.js":"33","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\store\\reducers\\server.js":"34","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\dashboard\\TopCounts.jsx":"35","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\servers\\Server_createdModal.jsx":"36","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\container\\pages\\dashboard\\CreateCloudServer.jsx":"37","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\servers\\cloud\\VultrCloudServer.jsx":"38","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\servers\\vultr\\Server_Details.jsx":"39","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\servers\\vultr\\details_popup\\StopServerModal.jsx":"40","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\servers\\vultr\\details_popup\\RestartServerModal.jsx":"41","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\servers\\vultr\\details_popup\\DestroyServerModal.jsx":"42","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\servers\\vultr\\details_popup\\ReinstallServerModal.jsx":"43","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\container\\pages\\dashboard\\vpn_server\\VpnServers.jsx":"44","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\container\\pages\\dashboard\\vpn_server\\CreateVpnServer.jsx":"45","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\servers\\vpn_server_table.jsx":"46","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\servers\\vultr\\vpn_filter.jsx":"47","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\servers\\Vpn_vultr_server.jsx":"48","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\servers\\vultr\\server_filter.jsx":"49","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\container\\pages\\dashboard\\vpn_server\\CloudServer.jsx":"50","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\container\\pages\\dashboard\\vpn_server\\CreateCloudServer.jsx":"51","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\servers\\vultr\\details_popup\\UpdateLabelModal.jsx":"52","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\servers\\vultr\\DetailsPageSkeleton.jsx":"53","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\servers\\vultr\\TableSkeleton.jsx":"54"},{"size":1092,"mtime":1610174392049,"results":"55","hashOfConfig":"56"},{"size":2945,"mtime":1611318914136,"results":"57","hashOfConfig":"56"},{"size":362,"mtime":499162500000,"results":"58","hashOfConfig":"56"},{"size":3614,"mtime":1609933059334,"results":"59","hashOfConfig":"56"},{"size":5272,"mtime":1609917236042,"results":"60","hashOfConfig":"56"},{"size":5469,"mtime":1609931888821,"results":"61","hashOfConfig":"56"},{"size":4484,"mtime":1611157902118,"results":"62","hashOfConfig":"56"},{"size":599,"mtime":1609743029264,"results":"63","hashOfConfig":"56"},{"size":246,"mtime":1610173909599,"results":"64","hashOfConfig":"56"},{"size":135,"mtime":1610174160353,"results":"65","hashOfConfig":"56"},{"size":1443,"mtime":1609742907155,"results":"66","hashOfConfig":"56"},{"size":489,"mtime":1609855330934,"results":"67","hashOfConfig":"56"},{"size":975,"mtime":1609838803359,"results":"68","hashOfConfig":"56"},{"size":297,"mtime":1609827788108,"results":"69","hashOfConfig":"56"},{"size":1766,"mtime":1609840237175,"results":"70","hashOfConfig":"56"},{"size":1208,"mtime":1610203510021,"results":"71","hashOfConfig":"56"},{"size":5138,"mtime":1610911544707,"results":"72","hashOfConfig":"56"},{"size":4680,"mtime":1611248195455,"results":"73","hashOfConfig":"56"},{"size":2531,"mtime":1609922085110,"results":"74","hashOfConfig":"56"},{"size":567,"mtime":1610179616996,"results":"75","hashOfConfig":"56"},{"size":4993,"mtime":1609867400173,"results":"76","hashOfConfig":"56"},{"size":6126,"mtime":1610004943771,"results":"77","hashOfConfig":"56"},{"size":2960,"mtime":1610046792771,"results":"78","hashOfConfig":"56"},{"size":6066,"mtime":1609932144564,"results":"79","hashOfConfig":"56"},{"size":3925,"mtime":1609932242372,"results":"80","hashOfConfig":"56"},{"size":3525,"mtime":1611156237451,"results":"81","hashOfConfig":"56"},{"size":5328,"mtime":1611248797494,"results":"82","hashOfConfig":"56"},{"size":1556,"mtime":1611317959470,"results":"83","hashOfConfig":"56"},{"size":3209,"mtime":1611318081550,"results":"84","hashOfConfig":"56"},{"size":3113,"mtime":1611126288935,"results":"85","hashOfConfig":"56"},{"size":4670,"mtime":1611129849035,"results":"86","hashOfConfig":"56"},{"size":1808,"mtime":1610173599821,"results":"87","hashOfConfig":"56"},{"size":521,"mtime":1610176785816,"results":"88","hashOfConfig":"56"},{"size":1046,"mtime":1611153612042,"results":"89","hashOfConfig":"56"},{"size":3418,"mtime":1611343694168,"results":"90","hashOfConfig":"56"},{"size":980,"mtime":1610891009936,"results":"91","hashOfConfig":"56"},{"size":2683,"mtime":1610894499398,"results":"92","hashOfConfig":"56"},{"size":2064,"mtime":1610894353443,"results":"93","hashOfConfig":"56"},{"size":13101,"mtime":1611341886619,"results":"94","hashOfConfig":"56"},{"size":2502,"mtime":1611339435721,"results":"95","hashOfConfig":"56"},{"size":2308,"mtime":1611339829274,"results":"96","hashOfConfig":"56"},{"size":2432,"mtime":1610980388742,"results":"97","hashOfConfig":"56"},{"size":2439,"mtime":1611339948063,"results":"98","hashOfConfig":"56"},{"size":913,"mtime":1610990193837,"results":"99","hashOfConfig":"56"},{"size":2861,"mtime":1611318156765,"results":"100","hashOfConfig":"56"},{"size":22610,"mtime":1611338061383,"results":"101","hashOfConfig":"56"},{"size":1672,"mtime":1611069758723,"results":"102","hashOfConfig":"56"},{"size":6518,"mtime":1611335447920,"results":"103","hashOfConfig":"56"},{"size":1584,"mtime":1611069989907,"results":"104","hashOfConfig":"56"},{"size":915,"mtime":1611158098913,"results":"105","hashOfConfig":"56"},{"size":2839,"mtime":1611158202307,"results":"106","hashOfConfig":"56"},{"size":2661,"mtime":1611341607521,"results":"107","hashOfConfig":"56"},{"size":5119,"mtime":1611242084298,"results":"108","hashOfConfig":"56"},{"size":4845,"mtime":1611247026435,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"1o3wg2a",{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"112"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"112"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"112"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"112"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"112"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"112"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"112"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"112"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"112"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"112"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"112"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"112"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"112"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"112"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"112"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"112"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"112"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"203"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"203"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"112"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"222","messages":"223","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"112"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"112"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"112"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"112"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"112"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"112"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"112"},"D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\index.js",[],["247","248"],"D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\App.js",["249","250"],"D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\reportWebVitals.js",[],"D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\container\\pages\\auth\\login.jsx",["251"],"import React , {useState} from 'react'\r\nimport {Container, Grid,Paper,TextField ,Button, Typography} from '@material-ui/core'\r\nimport {NavLink} from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {connect} from 'react-redux'\r\nimport * as action from '../../../store/actions/index'\r\nimport axios from 'axios'\r\nimport Logo from '../../assets/inituxlogo.png'\r\nconst useStyles = makeStyles({\r\n    root:{\r\n        paddingTop:\"15vh\",\r\n        textAlign:\"center\",\r\n        position:\"relative\"\r\n    },\r\n    papper:{\r\n        width:\"70%\",\r\n        minWidth:\"70%\",\r\n        padding:\"20px 10px\",\r\n        marginLeft:\"15%\",\r\n        backgroundColor:\"#F2F2FC \"\r\n        \r\n\r\n    },\r\n    input: {\r\n        width:\"70%\",\r\n        fontSize:\"20px\"\r\n    },\r\n    button:{\r\n        minWidth:\"70%\",\r\n        textTransform:\"none\",\r\n        fontSize:\"20px\",\r\n        backgroundColor:\"#007bfc\"\r\n        \r\n    }\r\n  })\r\nconst Login = (props)=>{\r\n    const [email, setEmail]= useState('')\r\n    const [password, setpassword]= useState('')\r\n    // const [islogin , setIsLogIn] = useState(true)\r\n    const classes = useStyles();\r\n\r\n    const loginHandler = (event)=>{\r\n        event.preventDefault()\r\n       \r\n        let headers= {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n        const inputData={\r\n            email,password\r\n        }\r\n        console.log(inputData)\r\n        axios.post(process.env.REACT_APP_BASE_URL + 'customer_api/auth/login' , inputData,\r\n        {headers:headers})\r\n        .then(result=>{\r\n            console.log(result)\r\n            const expiresIn = new Date(new Date().getTime()+ 24*3600*1000);\r\n            props.onAuth(result.data.token ,  expiresIn)\r\n        })\r\n        .catch(error=>{\r\n            console.log(error)\r\n        })\r\n      }\r\n      \r\n    return(<div>\r\n           <div className=\"TopSqure\"></div>\r\n            <div className=\"triangleDown\"></div>\r\n\r\n         \r\n        <Container fixed className={classes.root}>\r\n            <NavLink to=\"/\" style={{backgroundColor:\"#f7fdff\", padding:\"20px\"}}>\r\n                <img src={Logo} alt=\"logo\" />\r\n            </NavLink><br/><br/>\r\n         <Paper variant=\"outlined\" className={classes.papper}>\r\n          <h2><strong>Login to your Account</strong></h2><br/><br/>\r\n                <TextField variant=\"outlined\" required type=\"email\" \r\n                    className={classes.input} \r\n                    onChange={(event)=>setEmail(event.target.value)}\r\n                        label=\"Email\"\r\n                        InputProps={{ style:{ fontSize:25} }}\r\n                        placeholder=\"enter you mail...\"\r\n                /><br/><br/>\r\n                <TextField variant=\"outlined\" required type=\"password\" \r\n                    className={classes.input} \r\n                    onChange={(event)=>setpassword(event.target.value)}\r\n                    label=\"password\"\r\n                    InputProps={{ style:{ fontSize:20} }}\r\n                    placeholder=\"********\"\r\n                /><br/><br/>\r\n                 <Button variant=\"contained\" color=\"primary\" size=\"large\"  className={classes.button} onClick={loginHandler}>Login</Button><br/> <br/>\r\n               <Typography variant=\"body1\" style={{left:\"0%\", fontWeight:\"bold\"}}>Not Registered Yet? <NavLink to=\"/signup\" >Register</NavLink> </Typography> <br/>\r\n            </Paper>\r\n        </Container>\r\n     </div>\r\n    )\r\n}\r\n\r\nconst maspDispatchToProps = dispatch =>{\r\n    return{\r\n        onAuth: (token,expiresIn) =>dispatch(action.auth_start(token, expiresIn))\r\n    }\r\n}\r\n\r\nexport default connect(null, maspDispatchToProps)(Login)","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\container\\layout\\Layout.jsx",["252","253","254","255","256","257","258","259","260"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { NavLink} from 'react-router-dom'\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\nimport MenuOpenIcon from '@material-ui/icons/MenuOpen';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport Navigation from './navigation/Navigation'\r\nimport Logo from '../assets/inituxlogo.png'\r\nimport TopNavigation from './navigation/TopNavigation'\r\nconst drawerWidth = 300;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // backgroundColor:\"#F6F5F5\",\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function MiniDrawer(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n      \r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            // edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Server Management\r\n          </Typography>\r\n          <div style={{width:\"80%\", textAlign:\"right\"}}>\r\n            <TopNavigation/>\r\n            {/* <NavLink to=\"/logout\" style={{textDecoration:\"none\", backgroundColor:\"rgb(224,224,224)\",padding:\"10px 12px\", borderRadius:\"5px\", fontSize:\"19px\"}}>Logout <ExitToAppIcon/></NavLink> */}\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n       \r\n        <div className={classes.toolbar} style={{backgroundColor:\"#F2F2FC \", width:\"100%\",}}>\r\n          <img src={Logo} alt=\"Logo\" style={{width:\"70%\"}}/> &nbsp;&nbsp;&nbsp;\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? <MenuOpenIcon /> : <MenuOpenIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <div  style={{backgroundColor:\"#F2F2FC  \", width:\"100%\", height:\"100%\"}}>\r\n        <List >\r\n            <Navigation/>\r\n           \r\n        </List>\r\n        </div>\r\n      </Drawer>\r\n      <main className={classes.content} >\r\n        <div className={classes.toolbar} />\r\n         {props.children}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\container\\pages\\auth\\signup.jsx",["261","262","263","264"],"import React , {useState} from 'react'\r\nimport {Container, Paper,TextField ,Button, Typography} from '@material-ui/core'\r\nimport {NavLink} from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport axios from 'axios'\r\n\r\nimport {connect} from 'react-redux'\r\nimport * as action from '../../../store/actions/index'\r\nimport Logo from '../../assets/inituxlogo.png'\r\n\r\nconst useStyles = makeStyles({\r\n    root:{\r\n        paddingTop:\"15vh\",\r\n        textAlign:\"center\",\r\n        position:\"relative\"\r\n    },\r\n    papper:{\r\n        width:\"45vw\",\r\n        minWidth:\"330px\",\r\n        width:\"70%\",\r\n        padding:\"40px 10px\",\r\n        marginLeft:\"15%\",\r\n        backgroundColor:\"#F2F2FC \"\r\n\r\n    },\r\n    input: {\r\n        width:\"70%\",\r\n        fontSize:\"20px\"\r\n    },\r\n    button:{\r\n        minWidth:\"70%\",\r\n        textTransform:\"none\",\r\n        fontSize:\"20px\",\r\n        backgroundColor:\"#007bfc\"\r\n    },\r\n  })\r\nconst Signup = (props)=>{\r\n    const [email, setEmail]= useState('')\r\n    const [password, setPassword]= useState('')\r\n    const [confirmPassword, setConfirmPassword]= useState('')\r\n    const [hasErrors, setHasErrors] = useState(false)\r\n    const [errors, setErrors] = useState([])\r\n\r\n    const classes = useStyles();\r\n\r\n    const signupHandler = (event)=>{\r\n        event.preventDefault()\r\n        setHasErrors(false)\r\n        setErrors([])\r\n        let headers= {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n        if(!email){\r\n            setHasErrors(true)\r\n            const err =errors\r\n            err.push(\"email is required\")\r\n            setErrors(err)\r\n        }\r\n        if(!password){\r\n            setHasErrors(true)\r\n            const err = errors\r\n            err.push(\"password is required\")\r\n            setErrors(err)\r\n        }\r\n        if(password !== confirmPassword || !confirmPassword ){\r\n            setHasErrors(true)\r\n            const err = errors\r\n            err.push(\"password and confirm password should match\")\r\n            setErrors(err)\r\n        }\r\n        // if(!hasErrors){\r\n            const inputData={\r\n                email,password,confirmPassword\r\n            }\r\n            console.log(inputData)\r\n            axios.post(process.env.REACT_APP_BASE_URL + 'customer_api/auth/' , inputData,\r\n            {headers:headers})\r\n            .then(result=>{\r\n                console.log(result)\r\n                const expiresIn = new Date(new Date().getTime()+ 24*3600*1000);\r\n                props.onAuth(result.data.token ,  expiresIn)\r\n                // props.onAuth(result.data.token, expiresIn , result.data.user)\r\n            })\r\n            .catch(error=>{\r\n                console.log(error)\r\n            })\r\n            \r\n        // }\r\n\r\n      }\r\n         console.log(errors)\r\n      let errorBody = \"\";\r\n    //   if(hasErrors){\r\n    //       errorBody = errors.map((error, index)=>\r\n    //       <div key={index}>\r\n    //           <p style={{color:\"red\", textAlign:\"left\", paddingLeft:\"20px\"}}>{error}</p>\r\n    //       </div>\r\n    //       )}\r\n    {/* <div style={{backgroundColor:\"#8BC6EC\",backgroundImage:\" linear-gradient(135deg, #8BC6EC 0%, #9599E2 100%)\" , height:\"100vh\",margin:\"0\" }}> */}\r\n    return(\r\n        <div>\r\n            <div className=\"TopSqure\"></div>\r\n            <div className=\"triangleDown\"></div>\r\n\r\n         \r\n    <Container fixed className={classes.root}>\r\n         <NavLink to=\"/\" style={{backgroundColor:\"#f7fdff\", padding:\"20px\"}}>\r\n                <img src={Logo} alt=\"logo\" />\r\n            </NavLink><br/><br/>\r\n         <Paper variant=\"outlined\" className={classes.papper}>\r\n          <h2><strong>Create Account</strong></h2>\r\n             <br/>\r\n               \r\n                <TextField variant=\"outlined\" required type=\"email\" \r\n                    className={classes.input} \r\n                    onChange={(event)=>setEmail(event.target.value)}\r\n                        label=\"email\"\r\n                        InputProps={{ style:{ fontSize:25} }}\r\n                        placeholder=\"enter you mail...\"\r\n                /><br/><br/>\r\n                 \r\n                <TextField variant=\"outlined\" required type=\"password\" \r\n                    className={classes.input} \r\n                    onChange={(event)=>setPassword(event.target.value)}\r\n                    label=\"password\"\r\n                    InputProps={{ style:{ fontSize:25} }}\r\n                    placeholder=\"********\"\r\n                /><br/><br/>\r\n                 \r\n                <TextField variant=\"outlined\" required type=\"password\" \r\n                    className={classes.input} \r\n\r\n                    onChange={(event)=>setConfirmPassword(event.target.value)}\r\n                    label=\"confirm password\"\r\n                    InputProps={{ style:{ fontSize:25} }}\r\n                    placeholder=\"********\"\r\n                /><br/><br/>\r\n                \r\n                 <Button variant=\"contained\" color=\"primary\" size=\"large\"  className={classes.button} onClick={signupHandler}>Create Account</Button><br/> <br/>\r\n               <Typography variant=\"body1\" style={{left:\"0%\", fontWeight:\"bold\"}}>Already have an account? <NavLink to=\"/login\" >Login</NavLink> </Typography> <br/>\r\n        </Paper>\r\n    </Container>\r\n     </div>\r\n    )\r\n}\r\n\r\n\r\nconst maspDispatchToProps = dispatch =>{\r\n    return{\r\n        onAuth: (token,expiresIn) =>dispatch(action.auth_start(token, expiresIn))\r\n    }\r\n}\r\n\r\nexport default connect(null, maspDispatchToProps)(Signup)","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\container\\layout\\navigation\\Navigation.jsx",["265","266","267","268","269","270","271"],"import React from 'react'\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport { NavLink} from 'react-router-dom'\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport InsertChartIcon from '@material-ui/icons/InsertChart';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\r\nimport DnsIcon from '@material-ui/icons/Dns';\r\nimport ComputerIcon from '@material-ui/icons/Computer';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport FilterDramaIcon from '@material-ui/icons/FilterDrama';\r\n\r\nimport './Navigation.css'\r\nimport {connect} from 'react-redux'\r\n\r\n\r\n\r\n\r\nconst Navigation = (props)=>{\r\n    return(\r\n        <div className=\"Navigation\">\r\n            <br/>\r\n        {!props.token  && <div>\r\n          <NavLink to=\"/login\"  >\r\n                <ListItem >\r\n                    <VpnKeyIcon /> &nbsp; &nbsp; &nbsp; Login\r\n                </ListItem>\r\n            </NavLink>\r\n\r\n            <NavLink to=\"/signup\">\r\n                <ListItem >\r\n                     <PersonAddIcon /> &nbsp; &nbsp; &nbsp; Rigester\r\n                    {/* <ListItemText primary=\"regester\" /> */}\r\n                </ListItem>\r\n            </NavLink>\r\n        </div>}\r\n        {props.token  && <div>\r\n          <NavLink to=\"/dashboard\"  exact style={{textDecoration:\"none\"}}>\r\n                <ListItem className=\"listTextSize\">\r\n                    <DashboardIcon /><span style={{paddingLeft:\"30px\"}}>Dashboard</span>\r\n                </ListItem>\r\n            </NavLink>\r\n            {/* <NavLink to=\"/dashboard/create_vpn_server\" exact style={{textDecoration:\"none\"}}>\r\n                <ListItem className=\"listTextSize\">\r\n                     <CloudUploadIcon /> <span style={{paddingLeft:\"31px\"}}>Create vpn server</span>\r\n                </ListItem>\r\n            </NavLink>\r\n            <NavLink to=\"/dashboard/create_cloud_server\" exact style={{textDecoration:\"none\"}}>\r\n                <ListItem className=\"listTextSize\">\r\n                     <FilterDramaIcon /> <span style={{paddingLeft:\"31px\"}}>Create cloud server</span>\r\n                </ListItem>\r\n            </NavLink> */}\r\n            <NavLink to=\"/dashboard/vpn_servers\"  exact style={{textDecoration:\"none\"}}>\r\n                <ListItem className=\"listTextSize\">\r\n                     <DnsIcon /><span style={{paddingLeft:\"31px\"}}> Vpn Server</span>\r\n                </ListItem>\r\n            </NavLink>\r\n            <NavLink to=\"/dashboard/cloud_servers\"  exact style={{textDecoration:\"none\"}}>\r\n                <ListItem className=\"listTextSize\">\r\n                     <CloudUploadIcon /><span style={{paddingLeft:\"31px\"}}> Cloud Server</span>\r\n                </ListItem>\r\n            </NavLink>\r\n            {/* <NavLink to=\"/dashboard/packages\"  exact style={{textDecoration:\"none\"}}>\r\n                <ListItem className=\"listTextSize\">\r\n                     <LocalAtmIcon /> <span style={{paddingLeft:\"30px\"}}> Packages</span>\r\n                   \r\n                </ListItem>\r\n            </NavLink> */}\r\n            <NavLink to=\"/dashboard/payments\"  exact style={{textDecoration:\"none\"}}>\r\n                <ListItem className=\"listTextSize\">\r\n                     <PaymentIcon /> <span style={{paddingLeft:\"30px\"}}> Payments</span>\r\n                    {/* <ListItemText primary=\"regester\" /> */}\r\n                </ListItem>\r\n            </NavLink>\r\n          \r\n            {/* <NavLink to=\"/dashboard/snapshots\"  exact style={{textDecoration:\"none\"}}>\r\n                <ListItem className=\"listTextSize\">\r\n                     <ComputerIcon /><span style={{paddingLeft:\"31px\"}}> Snapshots</span>\r\n                </ListItem>\r\n            </NavLink> */}\r\n          \r\n            {/* <NavLink to=\"/dashboard/profile\" exact style={{textDecoration:\"none\"}}>\r\n                <ListItem className=\"listTextSize\">\r\n                     <PersonAddIcon /><span style={{paddingLeft:\"30px\"}}> Profile</span>\r\n                </ListItem>\r\n            </NavLink> */}\r\n        </div>}\r\n\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        token:state.auth.token\r\n    }\r\n}\r\nexport default connect(mapStateToProps) (Navigation)","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\store\\reducers\\auth.js",[],"D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\store\\actions\\actionTypes.js",[],"D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\store\\actions\\index.js",[],"D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\store\\actions\\auth.js",[],"D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\container\\pages\\auth\\logout.jsx",[],"D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\container\\pages\\LadingPage.jsx",["272","273","274"],"import React from'react'\r\nimport './LandingPage.css'\r\nimport {Container} from '@material-ui/core'\r\nimport {Grid, Button, TextField} from '@material-ui/core'\r\nimport { NavLink , useHistory } from 'react-router-dom'\r\nconst LandingPage = ()=>{\r\n\r\n    const history = useHistory()\r\n    return(\r\n\r\n        <div>\r\n            \r\n            <div className=\"TopSqure\"></div>\r\n            <div className=\"triangleDown\"></div>\r\n\r\n         \r\n\r\n            <Container style={{position:\"relative\"}}>\r\n\r\n             <h2 className=\"Title\">Welcome to Dedicated <br/>server management System</h2><br/><br/>\r\n\r\n        \r\n                  <Button onClick={ ()=>history.push('/signup')}\r\n                  style={{padding:\"20px 30px\", backgroundColor:\"white\", color:\"blue\", fontWeight:\"bold\", fontSize:\"20px\", textTransform:\"none\",}}>\r\n                   Create Account \r\n                </Button>\r\n            \r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LandingPage","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\container\\layout\\landingPageLayout.jsx",[],"D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\container\\layout\\LandingNav\\Navigations.js",["275","276","277","278"],"import React, { useState } from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n\r\n} from 'reactstrap';\r\nimport {Container, Typography, Button} from '@material-ui/core'\r\nimport DehazeIcon from '@material-ui/icons/Dehaze';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {NavLink, useHistory} from 'react-router-dom'\r\n\r\nimport './Navigation.css'\r\nimport Logo from '../../assets/inituxlogo.png'\r\n\r\nconst Example = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n   const history = useHistory()\r\n  return (\r\n    <div className=\"Toolbar\">\r\n        <Container className=\"Container\">\r\n      <Navbar  expand=\"md\" >\r\n         <NavLink to=\"/\"  >\r\n              <img src={Logo} alt=\"Logo\"/>\r\n        </NavLink>     \r\n        \r\n        <NavbarToggler onClick={toggle}>\r\n            <DehazeIcon  style={{color:'white'}}/>\r\n        </NavbarToggler>\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n              {/* <NavLink to=\"/components\">Components</NavLink> */}\r\n           \r\n          </Nav>\r\n          <Button variant=\"outlined\"  style={{textTransform:\"none\", border:\"2px solid white\"}}>\r\n\r\n            <NavLink to =\"/login\" className=\"RightLink\" style={{textDecoration:\"none\"}}>Log in</NavLink><br/>\r\n          </Button>&nbsp;&nbsp;<br/><br/>\r\n          <Button variant=\"contained\"  style={{textTransform:\"none\", backgroundColor:\"#038fb7\", border:\"2px solid #038fb7\" }}>\r\n            <NavLink to =\"/signup\" className=\"RightLink\" style={{textDecoration:\"none\"}}>Sign up</NavLink><br/>\r\n          </Button>\r\n       \r\n        </Collapse>\r\n      </Navbar>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Example;","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\container\\pages\\dashboard\\Dashboard.jsx",["279"],"import React , {useEffect, useState} from 'react'\r\nimport {Container} from '@material-ui/core'\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux'\r\n\r\nimport CountReport from '../../../components/dashboard/TopCounts'\r\nconst Dashboard = (props)=>{\r\n    const [counts, setCount]= useState({})\r\n    const [loading, setLoading] = useState(true)\r\n    useEffect(()=>{\r\n        const userdashboardData = async ()=>{\r\n            try {\r\n                const headers ={\r\n                    \"Authorization\":\"Bearer \"+props.token\r\n                }\r\n                const result = await axios.get(process.env.REACT_APP_BASE_URL+\"customer_api/server/dashboard_count_report\", {headers:headers})\r\n                setCount(result.data.body)\r\n                setLoading(false)\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        userdashboardData()\r\n    }, [])\r\n    if(loading) return <p>Loading</p>\r\n    return(\r\n        <Container>\r\n            <CountReport counts={counts}/>\r\n        </Container>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        token:state.auth.token\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Dashboard)","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\container\\pages\\dashboard\\Packages.jsx",["280","281","282"],"import React , {useState, useEffect} from 'react'\r\n\r\nimport {Container, Grid, Paper, Typography, Divider} from '@material-ui/core'\r\n\r\nimport {connect} from 'react-redux'\r\nimport axios from 'axios'\r\nimport './style/Packages.css'\r\n\r\nconst list =[true, false, false]\r\n\r\nconst Packages = (props)=>{\r\n    const [packages, setPackages] = useState([])\r\n    const [showtext, setShowtext] = useState([...list])\r\n    const [route, setRoute] = useState(\"\")\r\n\r\n    useEffect(()=>{\r\n\r\n        const getPackages = async ()=>{\r\n            try {  \r\n                const headers ={\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\" :\"Bearer \"+props.token\r\n                }\r\n                const result = await axios.get(process.env.REACT_APP_BASE_URL+\"customer_api/package\", {headers:headers} )\r\n                \r\n                setPackages(result.data.packages)\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n          \r\n        }\r\n        getPackages()\r\n    },[])\r\n\r\n    const changeRead= (val,route)=>{\r\n        let listBoool = [false, false, false, false, false]\r\n        listBoool[val]= true\r\n        setShowtext(listBoool)\r\n        setRoute(route)\r\n    }\r\n\r\n    let packageBody = \"Loading\"\r\n    if(!route){\r\n        packageBody = packages.map((pack, index)=>{\r\n                return(<Grid item xs={10} sm={8} md={6} lg={4} key={index}>\r\n                    <div className=\"Packages\">\r\n                        <div className=\"Package_title\">\r\n                         <Typography variant=\"h6\" > <b style ={{color:\"white\"}}>{pack.package_name} </b> <span style={{color:'#b3b6d3', fontWeight:\"bolder\"}}> by {pack.route}</span></Typography>\r\n                         </div><br/>\r\n                        <p className=\"Package_list_pricing_monthly\" > ${pack.monthly_price}/mo   </p>\r\n                        <p className=\"Package_list_pricing_other\" > ${pack.daily_price}/d  <br/> ${pack.hourly_price}/h   </p>\r\n                        <div className=\"Divider\"/>\r\n                        <div>\r\n                            <Typography className=\"Package_list\" >  <b >{pack.disk} disk</b></Typography>\r\n                            <Typography className=\"Package_list\" >  <b >{pack.ram} ram</b></Typography>\r\n                            <Typography className=\"Package_list\" >  <b >{pack.cpu} cpu</b></Typography>\r\n                            <Typography className=\"Package_list\" >  <b >{pack.bandwidth} bandwidth</b></Typography>\r\n                        </div>\r\n                        <br/>\r\n                        \r\n\r\n                         \r\n                    </div>\r\n                </Grid>)\r\n            })\r\n            \r\n    }\r\n    else{\r\n        packageBody = packages.map((pack, index)=>{\r\n            if(pack.route !== route) return\r\n \r\n                return(<Grid item xs={10} sm={8} md={6} lg={4} key={index}>\r\n                <div className=\"Packages\">\r\n                    <div className=\"Package_title\">\r\n                     <Typography variant=\"h6\" > <b style ={{color:\"white\"}}>{pack.package_name} </b> <span style={{color:'#b3b6d3', fontWeight:\"bolder\"}}> by {pack.route}</span></Typography>\r\n                     </div><br/>\r\n                    <p className=\"Package_list_pricing_monthly\" > ${pack.monthly_price}/mo   </p>\r\n                    <p className=\"Package_list_pricing_other\" > ${pack.daily_price}/d  <br/> ${pack.hourly_price}/h   </p>\r\n                    <div className=\"Divider\"/>\r\n                    <div>\r\n                        <Typography className=\"Package_list\" >  <b >{pack.disk} disk</b></Typography>\r\n                        <Typography className=\"Package_list\" >  <b >{pack.ram} ram</b></Typography>\r\n                        <Typography className=\"Package_list\" >  <b >{pack.cpu} cpu</b></Typography>\r\n                        <Typography className=\"Package_list\" >  <b >{pack.bandwidth} bandwidth</b></Typography>\r\n                    </div>\r\n                    <br/>\r\n                </div>\r\n            </Grid>)}\r\n        )\r\n    }\r\n    return(\r\n        <Container style={{marginTop:\"20px\"}}>\r\n            <p  className=\"Intro_Content\">Packages </p><br/>\r\n            <Grid container spacing={2} >\r\n               <Grid item sx= {3} sm={2} md={1} lg={2} style={{borderBottom: showtext[0] && \"2px solid #007bff\", width: showtext[0] && \"100%\" }}>\r\n                  <p className=\"Profile_Tab\"  onClick={()=>{changeRead(0, \"\")}} >All packages</p>\r\n               </Grid>&nbsp;&nbsp;\r\n               <Grid item sx= {3} sm={2} md={2} lg={1}   style={{borderBottom: showtext[1] && \"2px solid #007bff\", width: showtext[1] && \"100%\"  }}>\r\n                  <p className=\"Profile_Tab\"  onClick={()=>{changeRead(1, \"vultr\")}} >vultr</p>\r\n               </Grid>\r\n           </Grid>\r\n           <Divider style={{marginTop:\"8px\"}}/>\r\n           <br/><br/>\r\n            <Grid container spacing={5}>\r\n              { packageBody}\r\n\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        token:state.auth.token\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Packages)","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\container\\pages\\dashboard\\Snapshots.jsx",["283","284","285"],"import React , {useState, useEffect} from 'react'\r\n\r\nimport {Container, Grid, Paper, Typography, Divider} from '@material-ui/core'\r\n\r\nimport {connect} from 'react-redux'\r\nimport axios from 'axios'\r\nimport './style/Packages.css'\r\n\r\nconst list =[true, false, false]\r\n\r\nconst Snapshot = (props)=>{\r\n    const [snapshots, setSnapshots] = useState([])\r\n    const [showtext, setShowtext] = useState([...list])\r\n    const [route, setRoute] = useState(\"\")\r\n\r\n    useEffect(()=>{\r\n\r\n        const getPackages = async ()=>{\r\n            try {  \r\n                const headers ={\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\" :\"Bearer \"+props.token\r\n                }\r\n                const result = await axios.get(process.env.REACT_APP_BASE_URL+\"customer_api/snapshot\", {headers:headers} )\r\n                \r\n                setSnapshots(result.data.body)\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n          \r\n        }\r\n        getPackages()\r\n    },[])\r\n\r\n    const changeRead= (val,route)=>{\r\n        let listBoool = [false, false, false,]\r\n        listBoool[val]= true\r\n        setShowtext(listBoool)\r\n        setRoute(route)\r\n    }\r\n\r\n\r\n    let snapshotBody = \"Loading\"\r\n    if(!route){\r\n        snapshotBody = snapshots.map((snap, index)=>{\r\n                return(<Grid item xs={12} sm={8} md={6} lg={4} key={index}>\r\n                    <div className=\"Packages\">\r\n                        <div className=\"Package_title\">\r\n                         <Typography variant=\"h6\" > <b style ={{color:\"white\"}}>{snap.snapshot_name} </b> <span style={{color:'#b3b6d3', fontWeight:\"bolder\"}}> by {snap.route}</span></Typography>\r\n                         </div><br/>\r\n                          \r\n                        <div>\r\n                            <Typography className=\"Package_list_pricing_other\" >  <b >{snap.disk} disk</b></Typography>\r\n                            <Typography className=\"Package_list_pricing_other\" >  <b >{snap.ram} ram</b></Typography>\r\n                            <Typography className=\"Package_list_pricing_other\" >  <b >{snap.cpu} cpu</b></Typography>\r\n                            <Typography className=\"Package_list_pricing_other\" >  <b >{snap.bandwidth} bandwidth</b></Typography>\r\n                        </div>\r\n                        <br/>\r\n                    </div>\r\n                </Grid>)\r\n            })\r\n            \r\n    }\r\n    else{\r\n        snapshotBody = snapshots.map((snap, index)=>{\r\n            if(snap.route !== route) return\r\n            return(<Grid item xs={12} sm={12} md={6} lg={4} key={index}>\r\n                <div className=\"Packages\">\r\n                    <div className=\"Package_title\">\r\n                     <Typography variant=\"h6\" > <b style ={{color:\"white\"}}>{snap.snapshot_name} </b> <span style={{color:'#b3b6d3', fontWeight:\"bolder\"}}> by {snap.route}</span></Typography>\r\n                     </div><br/>\r\n                      \r\n                    <div>\r\n                        <Typography className=\"Package_list_pricing_other\" >  <b >{snap.disk} disk</b></Typography>\r\n                        <Typography className=\"Package_list_pricing_other\" >  <b >{snap.ram} ram</b></Typography>\r\n                        <Typography className=\"Package_list_pricing_other\" >  <b >{snap.cpu} cpu</b></Typography>\r\n                        <Typography className=\"Package_list_pricing_other\" >  <b >{snap.bandwidth} bandwidth</b></Typography>\r\n                    </div>\r\n                    <br/>\r\n                </div>\r\n            </Grid>)\r\n        })\r\n    }\r\n    return(\r\n        <Container style={{marginTop:\"20px\"}}>\r\n            <p  className=\"Intro_Content\">Snapshots </p>\r\n            <Grid container spacing={2} >\r\n               <Grid item sx= {3} sm={2} md={1} lg={2} style={{borderBottom: showtext[0] && \"2px solid #007bff\", width: showtext[0] && \"100%\" }}>\r\n                  <p className=\"Profile_Tab\"  onClick={()=>{changeRead(0, \"\")}} >All packages</p>\r\n               </Grid>&nbsp;&nbsp;\r\n               <Grid item sx= {3} sm={2} md={2} lg={1}   style={{borderBottom: showtext[1] && \"2px solid #007bff\", width: showtext[1] && \"100%\"  }}>\r\n                  <p className=\"Profile_Tab\"  onClick={()=>{changeRead(1, \"vultr\")}} >vultr</p>\r\n               </Grid>\r\n           </Grid>\r\n           <Divider style={{marginTop:\"8px\"}}/>\r\n           <br/><br/>\r\n            <Grid container  spacing={3}>\r\n              {snapshotBody}\r\n\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        token:state.auth.token\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Snapshot)","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\container\\pages\\dashboard\\Profile.jsx",["286"],"import React , {useState, useEffect} from 'react'\r\n\r\nimport {Container, Grid, Divider} from '@material-ui/core'\r\nimport { connect } from 'react-redux'\r\nimport axios from 'axios'\r\nimport './style/Profile.css'\r\nimport UpdateProfile from '../../../components/profile/UpdateProfle'\r\nimport UpdatePassword from '../../../components/profile/UpdatePassword'\r\n\r\n\r\nconst list =[true, false]\r\n\r\nconst Profile = (props)=>{\r\n    const [showtext, setShowtext] = useState([...list])\r\n    const [customer, setCustomer] = useState({})\r\n    useEffect(()=>{\r\n        const profileInfo = async ()=>{\r\n            try {\r\n\r\n                const headers = {\r\n                    'Content-Type':\"aplpication/json\",\r\n                    \"Authorization\":\"Bearer \"+props.token\r\n                }\r\n                const result = await axios.get(process.env.REACT_APP_BASE_URL+\"customer_api/auth/\", {headers:headers})\r\n                // console.log(result.data.customer)\r\n                setCustomer(result.data.customer)\r\n                \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        profileInfo()\r\n    },[])\r\n\r\n    const changeRead= (val)=>{\r\n        let listBoool = [false, false]\r\n        listBoool[val]= true\r\n        setShowtext(listBoool)\r\n    }\r\n\r\n    return(\r\n        <Container> \r\n            <p className=\"ProfileTitle\">{customer && customer.email}</p><br/><br/>\r\n            <Grid container spacing={2} >\r\n               <Grid item sx= {3} sm={2} md={1} lg={1} style={{borderBottom: showtext[0] && \"2px solid #007bff\", width: showtext[0] && \"100%\" }}>\r\n                  <p className=\"Profile_Tab\"  onClick={()=>{changeRead(0)}} >Profile</p>\r\n               </Grid>&nbsp;&nbsp;\r\n               <Grid item sx= {3} sm={2} md={2} lg={2}   style={{borderBottom: showtext[1] && \"2px solid #007bff\", width: showtext[0] && \"100%\"  }}>\r\n                  <p className=\"Profile_Tab\"  onClick={()=>{changeRead(1)}} >Authentication</p>\r\n               </Grid>\r\n           </Grid>\r\n               <Divider style={{marginTop:\"9px\"}}/>\r\n               {customer.email && <div style={{marginTop:\"30px\", textAlign:\"left\"}}>\r\n                   {showtext[0]  &&  <UpdateProfile token ={props.token} customer={customer}/>}\r\n                   {showtext[1]  &&   <UpdatePassword token ={props.token}/>}\r\n\r\n               </div>   } \r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps =state =>{\r\n    return{\r\n        token:state.auth.token\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Profile)","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\container\\pages\\dashboard\\Payments.jsx",["287","288","289"],"import React from 'react'\r\n\r\nimport {Container, Typography, Divider} from '@material-ui/core'\r\nimport Add_Payment from '../../../components/payment/Add_payment'\r\nimport PaymentTable from '../../../components/payment/PymnetTable'\r\nconst Payments = ()=>{\r\n    return(\r\n        <div>\r\n            <Add_Payment/><br/>\r\n            <br/>\r\n            <p  className=\"Intro_Content\">Payment Table </p>\r\n             <Container fixed style={{marginTop:\"30px\"}}>\r\n                 <PaymentTable/>\r\n             </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Payments","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\payment\\Add_payment.jsx",[],"D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\payment\\PymnetTable.jsx",["290","291","292","293","294"],"import React, {useState, useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport axios from 'axios'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport ZoomInIcon from '@material-ui/icons/ZoomIn';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n\r\nconst columns = [\r\n    {id:\"payment_date\", label:\"Date\", minWidth:12},\r\n  { id: 'amount', label: 'Amount', minWidth: 100 },\r\n  { id: 'payment_method', label: 'Method', minWidth: 100 },\r\n  {\r\n    id: 'payment_status',\r\n    label: 'Status',\r\n    minWidth: 100,\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'comment',\r\n    label: 'Comment',\r\n    minWidth: 250,\r\n    // align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n//   {\r\n//     id: 'action',\r\n//     label: 'Action',\r\n//     minWidth: 150,\r\n//     align: 'center',\r\n//     format: (value) => value.toFixed(2),\r\n//   },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    container: {\r\n        maxHeight: \"auto\",\r\n    },\r\n});\r\n\r\n\r\nconst PaymentTable = (props)=>{\r\n    const classes = useStyles();\r\n    const [payments, setPayments] = useState([])\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n    useEffect(()=>{\r\n        const getPayments = async ()=>{\r\n            try {\r\n                const headers = {\r\n                    \"Content-Type\":\"application/json\",\r\n                    \"Authorization\":\"Bearer \"+props.token\r\n                }\r\n                const result = await axios.get(process.env.REACT_APP_BASE_URL+\"customer_api/payment/\", {headers:headers})\r\n                console.log(result)\r\n                setPayments(result.data.payments)\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        getPayments()\r\n    },[])\r\n\r\n    const  createData= (payment) =>{\r\n        let payment_status = \"pending\"\r\n\r\n        if(payment.payment_status === 2){\r\n            payment_status =\"success\"\r\n        }\r\n        if(payment.payment_status === 3){\r\n            payment_status =\"cancle\"\r\n        }\r\n\r\n        var today = new Date(payment.payment_date);\r\n        var year = today.getFullYear();\r\n        var month = today.getMonth()+1;\r\n        var day = today.getDate();\r\n        var date =day+\"-\"+month+\"-\"+year;\r\n      \r\n        // const receved_date = fecha\r\n       \r\n        const payment_date = date\r\n        const amount = payment.amount + \" $\"\r\n        const payment_method = payment.payment_method\r\n        const comment = payment.comment\r\n        // const action = <div>\r\n        //     <Button variant=\"contained\" color=\"primary\" onClick={()=>setDetailsValue(quote)}><ZoomInIcon/></Button>&nbsp;&nbsp;\r\n        //     <Button variant=\"contained\" color=\"secondary\" onClick={()=>deleteQuote(quote._id)}><DeleteIcon/></Button>  \r\n\r\n        // </div>\r\n        return {payment_date, amount, payment_method, payment_status, comment};\r\n    }\r\n\r\n    const rows = []\r\n \r\n    payments.map((payment, index)=>{\r\n     return(<div key={index}>\r\n     { payment &&  rows.push(createData({...payment,key: index}))}\r\n\r\n     </div>)\r\n    })\r\n\r\n    \r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n    return(\r\n        <div>\r\n        <Paper className={classes.root}>\r\n             <TableContainer className={classes.container}>\r\n        \r\n                <Table stickyHeader aria-label=\"sticky table\" >\r\n                <TableHead >\r\n                    <TableRow >\r\n                    {columns.map((column) => (\r\n                        <TableCell\r\n                        key={column.id}\r\n                        align={column.align}\r\n                        style={{ minWidth: column.minWidth, backgroundColor:\"#007bff\", color:\"white\", fontSize:\"20px\", fontWeight:\"bolder\" }}\r\n                        >\r\n                        {column.label}\r\n                        </TableCell>\r\n                    ))}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\r\n                    return (\r\n                        <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                        {columns.map((column, index) => {\r\n                            const value = row[column.id];\r\n                        \r\n                            return (\r\n                            <TableCell key={index} align={column.align}>\r\n                                {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                            </TableCell>\r\n                            );\r\n                        })}\r\n                        </TableRow>\r\n                    );\r\n                    })}\r\n                </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n                rowsPerPageOptions={[10, 25, 100]}\r\n                component=\"div\"\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n        </Paper>\r\n    \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        token:state.auth.token\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(PaymentTable)","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\container\\layout\\navigation\\TopNavigation.jsx",["295","296","297","298","299"],"import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { Avatar } from '@material-ui/core'\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport { NavLink , useHistory} from 'react-router-dom'\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nconst StyledMenu = withStyles({\r\n  paper: {\r\n    border: '1px solid #d3d4d5',\r\n  },\r\n})((props) => (\r\n  <Menu\r\n    elevation={0}\r\n    getContentAnchorEl={null}\r\n    anchorOrigin={{\r\n      vertical: 'bottom',\r\n      horizontal: 'center',\r\n    }}\r\n    transformOrigin={{\r\n      vertical: 'top',\r\n      horizontal: 'center',\r\n    }}\r\n    {...props}\r\n  />\r\n));\r\n\r\nconst StyledMenuItem = withStyles((theme) => ({\r\n  root: {\r\n    '&:focus': {\r\n      backgroundColor: theme.palette.primary.main,\r\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n  },\r\n}))(MenuItem);\r\n\r\nexport default function CustomizedMenus() {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const history = useHistory()\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = (route) => {\r\n    history.push(route)\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        aria-controls=\"customized-menu\"\r\n        aria-haspopup=\"true\"\r\n        // variant=\"contained\"\r\n        // color=\"primary\"\r\n        onClick={handleClick}\r\n      >\r\n        <Avatar>\r\n           <PersonIcon /> \r\n        </Avatar>&nbsp;&nbsp;\r\n        <KeyboardArrowDownIcon  style={{color:\"white\"}} />\r\n      </Button>\r\n      <StyledMenu\r\n        id=\"customized-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        \r\n        <StyledMenuItem />\r\n        <StyledMenuItem onClick={()=>handleClose(\"/dashboard/profile\")}>\r\n          <ListItemIcon>\r\n            <PersonAddIcon fontSize=\"small\" />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Profile\" />\r\n        </StyledMenuItem>\r\n        <StyledMenuItem onClick={()=>handleClose((\"/logout\"))}>\r\n          <ListItemIcon>\r\n            <ExitToAppIcon fontSize=\"small\" />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Log out\" />\r\n        </StyledMenuItem>\r\n      </StyledMenu>\r\n    </div>\r\n  );\r\n}\r\n","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\profile\\UpdateProfle.jsx",[],"D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\profile\\UpdatePassword.jsx",["300"],"import React , {useState} from 'react'\r\n\r\nimport {  TextField , Button} from  '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport axios from 'axios'\r\n\r\nconst useStyles = makeStyles({\r\n    button:{\r\n        minWidth:\"70%\",\r\n        textTransform:\"none\",\r\n        fontSize:\"20px\",\r\n        backgroundColor:\"#007bfc\"\r\n    }\r\n  })\r\n\r\nconst UpdatePassword = (props)=>{\r\n    const classes = useStyles();\r\n\r\n    const [oldPassword, setOldPassword] = useState(\"\")\r\n    const [newPassword, setNewPassword] = useState(\"\")\r\n    const [newConfirmPassword, setNewConfirmPassword] = useState(\"\")\r\n   \r\n    const [message, setMessage] = useState(\"\")\r\n    const [error, setError] = useState(false)\r\n\r\n    const passwordChangeHandler = async ()=>{\r\n        try {\r\n           const inputData ={\r\n            oldPassword,newPassword,newConfirmPassword\r\n           }\r\n           const headers = {\r\n               \"Content-Type\":\"application/json\",\r\n               \"Authorization\" :\"Bearer \"+props.token\r\n           }\r\n\r\n           const result = await axios.put(process.env.REACT_APP_BASE_URL+\"customer_api/auth/update_password/\" ,inputData  , {headers:headers} )\r\n           console.log(result)\r\n           console.log(\"here\")\r\n           if(result.data.error === false){\r\n               setError(false)\r\n               setMessage(result.data.message)\r\n           }\r\n           else{\r\n               console.log(\"here 2\")\r\n               setError(true)\r\n               setMessage(result.data.message)\r\n           }\r\n        } \r\n        catch (error) {\r\n           console.log(error)\r\n            setError(true)\r\n            setMessage(\"something went wrong ! Please check again\")\r\n       }\r\n\r\n   }\r\n\r\n    const style={\r\n        width:\"70%\",\r\n        marginTop:\"20px\",\r\n        paddingBottm:\"20px\",\r\n        fontSize:\"30px\"\r\n    }\r\n    const button ={\r\n        width:\"70%\",\r\n        textAlign:\"center\", \r\n        padding:\"15px 0px\", \r\n        background:\"#e5edfc\", \r\n        color:\"#007bff\", \r\n        fontSize:\"20px\",\r\n        textTransform:\"none\",\r\n        fontWeight:\"bold\"\r\n    }\r\n    return(\r\n        <div >\r\n               <p className=\"ProfileTitle\" style={{color:\"#007bff\"}}>Update Profile information</p>\r\n           \r\n           { error && message && <div style={{width:\"70%\", color:\"white\",fontSize:\"20px\", padding:\"20px\", backgroundColor:\"red\"}}>{message}</div>}\r\n           {  !error && message &&  <div style={{width:\"70%\", color:\"white\",fontSize:\"20px\", padding:\"20px\", backgroundColor:\"#007bfc\"}}>{message}</div>}\r\n               <br/>\r\n               <TextField \r\n                variant=\"outlined\" required type=\"password\"  \r\n                onChange={(event)=>setOldPassword(event.target.value)}\r\n                label=\"old Password\"\r\n                InputProps={{ style:{ fontSize:25} }}\r\n                placeholder=\"enter old password\"\r\n                style={style}\r\n            /><br/>\r\n            <TextField \r\n                variant=\"outlined\" required type=\"password\"  \r\n                onChange={(event)=>setNewPassword(event.target.value)}\r\n                label=\"new password\"\r\n                InputProps={{ style:{ fontSize:25} }}\r\n                placeholder=\"enter new password\"\r\n                style={style}\r\n            /><br/>\r\n               <TextField \r\n                variant=\"outlined\" required type=\"password\"  \r\n                onChange={(event)=>setNewConfirmPassword(event.target.value)}\r\n                label=\"confirm Password\"\r\n                InputProps={{ style:{ fontSize:25} }}\r\n                placeholder=\"enter confirm password\"\r\n                style={style}\r\n            /><br/><br/><br/>\r\n            <Button variant=\"contained\" color=\"primary\" size=\"large\"  className={classes.button}\r\n               onClick={passwordChangeHandler}\r\n            >Change Password\r\n            </Button>\r\n\r\n\r\n        </div>    \r\n    )\r\n}\r\n\r\nexport default UpdatePassword","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\servers\\Destroy.jsx",[],"D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\servers\\Select_Location.jsx",["301","302"],"import React, {useState} from 'react'\r\nimport {Grid , Divider, Container} from '@material-ui/core'\r\n\r\nimport US from '../../container/assets/flag/US.png'\r\nimport CA from '../../container/assets/flag/CA.png'\r\nimport NL from '../../container/assets/flag/NL.png'\r\nimport GB from '../../container/assets/flag/GB.png'\r\nimport DE from '../../container/assets/flag/DE.png'\r\nimport AU from '../../container/assets/flag/AU.png'\r\nimport FR from '../../container/assets/flag/FR.png'\r\nimport JP from '../../container/assets/flag/JP.png'\r\nimport KR from '../../container/assets/flag/KR.png'\r\nimport SG from '../../container/assets/flag/SG.png'\r\n\r\n\r\n\r\nconst list =[true, false, false, false, false]\r\n\r\nconst flag={\r\n    US:US,\r\n    CA:CA,\r\n    NL:NL,\r\n    GB:GB,\r\n    DE:DE,\r\n    AU:AU,\r\n    FR:FR,\r\n    JP:JP,\r\n    KR:KR,\r\n    SG:SG,\r\n}\r\n\r\nconst Locations = (props)=>{\r\n    const [showtext, setShowtext] = useState([...list])\r\n    const [continent, setContinent] = useState(\"\")\r\n\r\n\r\n    const changeRead= (val,cont)=>{\r\n        let listBoool = [false, false, false, false, false]\r\n        listBoool[val]= true\r\n        setShowtext(listBoool)\r\n        setContinent(cont)\r\n    }\r\n\r\n    let locations = \"Loading\"\r\n    if(props.locations && !continent){\r\n        locations = <Grid container spacing={3}>\r\n        { props.locations.map((location, index)=>{\r\n         return(\r\n             <Grid item xs={6} sm={6} md={4} lg={3}  key={index}>\r\n                 <div className={(props.DCID.toString()===location.DCID.toString() ? \"Selection Locations_div\" :\"Locations_div\") }\r\n                  onClick={()=>{props.setDCIDHandler(location.DCID); props.setCountry(location.country)}}>\r\n                      <Grid container spacing={3}>\r\n                          <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                          <img src={flag[location.country]} alt={location.country} width=\"50px\" height=\"auto\" style={{marginTop:\"10px\", marginRight:\"10px\"}}/>\r\n\r\n                          </Grid>\r\n                          <Grid item xs={12} sm={6} md={8} lg={9}>\r\n                          <span className=\"Title_text_black\"> {location.name}</span><br/>\r\n                          <span className=\"Subtitle_text_black\"> {location.country}</span>\r\n                          </Grid>\r\n\r\n                      </Grid>\r\n                    \r\n                 </div>\r\n             </Grid>\r\n         )\r\n \r\n         })}\r\n         </Grid>\r\n    }\r\n    else if(props.locations && continent){\r\n        locations = <Grid container spacing={3}>\r\n        { props.locations.map((location, index)=>{\r\n            if(location.continent !== continent) return\r\n            else{\r\n                return(\r\n                    <Grid item xs={12} sm={8} md={4} lg={3}  key={index}>\r\n                        <div className={(props.DCID.toString()===location.DCID.toString() ? \"Selection Locations_div\" :\"Locations_div\") }\r\n                        onClick={()=>props.setDCIDHandler(location.DCID)}>\r\n                           \r\n                           <Grid container>\r\n                            <Grid item xs={12} sm={8} md={4} lg={3}>\r\n                            <img src={flag[location.country]} alt={location.country} width=\"50px\" height=\"auto\" style={{marginTop:\"10px\"}}/>\r\n\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={8} md={8} lg={9}>\r\n                            <span className=\"Title_text_black\"> {location.name}</span><br/>\r\n                            <span className=\"Subtitle_text_black\"> {location.country}</span>\r\n                          </Grid>\r\n\r\n                      </Grid>\r\n                        </div>\r\n                    </Grid>\r\n                )\r\n             }\r\n \r\n         })}\r\n         </Grid>\r\n    }\r\n\r\n    return(\r\n        <div style={{minWidth:\"300px\"}}>\r\n            <p className=\"Title_text_black\">Server Locations</p> <br/>\r\n      \r\n            <Grid container spacing={2} >\r\n               <Grid item sx= {3} sm={2} md={1} lg={2} style={{borderBottom: showtext[0] && \"2px solid #007bff\"}}>\r\n                  <p className=\"Profile_Tab\"  onClick={()=>{changeRead(0, \"\")}} >All Locations</p>\r\n               </Grid>&nbsp;&nbsp;\r\n               <Grid item sx= {3} sm={2} md={2} lg={2}   style={{borderBottom: showtext[1] && \"2px solid #007bff\" }}>\r\n                  <p className=\"Profile_Tab\"  onClick={()=>{changeRead(1, \"North America\")}} >North America</p>\r\n               </Grid>\r\n               <Grid item sx= {3} sm={2} md={2} lg={2}   style={{borderBottom: showtext[2] && \"2px solid #007bff\" }}>\r\n                  <p className=\"Profile_Tab\"  onClick={()=>{changeRead(2, \"Europe\")}} >Europe</p>\r\n               </Grid>\r\n               <Grid item sx= {3} sm={2} md={2} lg={1}   style={{borderBottom: showtext[3] && \"2px solid #007bff\"}}>\r\n                  <p className=\"Profile_Tab\"  onClick={()=>{changeRead(3,\"Asia\")}} >Asia</p>\r\n               </Grid>\r\n               <Grid item sx= {3} sm={2} md={2} lg={2}   style={{borderBottom: showtext[4] && \"2px solid #007bff\" }}>\r\n                  <p className=\"Profile_Tab\"  onClick={()=>{changeRead(4,\"Australia\")}} >Australia</p>\r\n               </Grid>\r\n           </Grid>\r\n            <Divider style={{marginTop:\"8px\"}}/>\r\n            <br/>\r\n            {locations}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Locations","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\servers\\Snapshot.jsx",["303","304","305","306"],"D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\servers\\Server_Packages.jsx",["307","308","309","310"],"D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\servers\\Server_Inputs.jsx",["311","312"],"import React,{useState,useRef} from 'react'\r\n\r\nimport AddCircleRoundedIcon from '@material-ui/icons/AddCircleRounded';\r\nimport { TextField, Grid, Button} from '@material-ui/core'\r\n\r\nconst Serverinputs = (props)=>{\r\n   \r\n      \r\n    const style={\r\n        width:\"100%\",\r\n        marginTop:\"20px\",\r\n        paddingBottm:\"20px\",\r\n        fontSize:\"30px\"\r\n    }\r\n\r\n    return(\r\n        <div>\r\n\r\n        <p className=\"Title_text_black\">Server Hostname & Label</p> <br/>\r\n   \r\n          {props.fields.map((field, idx) => {\r\n                    return (\r\n                    <div key={`${field}-${idx}`}>\r\n                         <Grid container spacing={3}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6}>\r\n                                <TextField \r\n                                    variant=\"outlined\" required type=\"text\"  \r\n                                    onChange={(event)=>{props.setLabel(idx, event)}}\r\n                                    label=\"label\"\r\n                                    InputProps={{ style:{ fontSize:25} }}\r\n                                    placeholder=\"enter label\"\r\n                                    style={style}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6}>\r\n                                <TextField \r\n                                    variant=\"outlined\" \r\n                                    required type=\"text\"  \r\n                                    onChange={(event)=>props.setHostname(idx,event)}\r\n                                    placeholder=\"hostname\"\r\n                                    value={field.hostname || \"\"}\r\n                                    InputProps={{ style:{ fontSize:25} }}\r\n                                    style={style}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>   \r\n                        <br/>\r\n                        \r\n                    </div>\r\n                    );\r\n                })} \r\n            <Button  onClick={() => props.handleAdd()}><AddCircleRoundedIcon fontSize=\"large\" color=\"primary\"/></Button>\r\n\r\n          <br/><br/><br/>\r\n            \r\n        </div>    \r\n    )\r\n}\r\n\r\nexport default Serverinputs\r\n\r\n\r\n// <Grid container spacing={3}>\r\n// <Grid item xs={12} sm={6} md={6} lg={6}>\r\n//    <TextField \r\n//        variant=\"outlined\" required type=\"text\"  \r\n//        onChange={(event)=>{props.setLabel(event.target.value);props.setHostname(event.target.value)}}\r\n//        label=\"label\"\r\n//        InputProps={{ style:{ fontSize:25} }}\r\n//        placeholder=\"enter label\"\r\n//        style={style}\r\n//    />\r\n// </Grid>\r\n// <Grid item xs={12} sm={6} md={6} lg={6}>\r\n//    <TextField \r\n//        autoComplete ={props.label}\r\n//        variant=\"outlined\" \r\n//        required type=\"text\"  \r\n//        onChange={(event)=>props.setHostname(event.target.value)}\r\n//        placeholder=\"hostname\"\r\n//        value={props.hostname}\r\n//        InputProps={{ style:{ fontSize:25} }}\r\n//        style={style}\r\n//    />\r\n// </Grid>\r\n// </Grid> ","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\servers\\Expiredate_Update.jsx",["313","314","315","316","317","318","319","320","321","322","323"],"import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport {connect} from 'react-redux'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport {Container, Grid, Paper, Typography, Divider} from '@material-ui/core'\r\nimport * as actions from '../../store/actions/index'\r\nimport {  format } from 'date-fns'\r\n\r\nconst Update_Expire = (props)=>{\r\n    const [packages, setPackages] = useState([])\r\n    const [message, setMessage] = useState(\"\")\r\n    const [error, setError] = useState(false)\r\n    const [package_id, setPackageId] = useState(\"\")\r\n    const [billing_type, setBillingType] = useState(\"\")\r\n    const [route, setRooute] = useState(props.server.route)\r\n    const [expireDate, setExpireDate]= useState(props.server.expire_date)\r\n    // console.log(props.indexIndex)\r\n\r\n    const {\r\n        className\r\n      } = props;\r\n    const expireDateHandler = async()=>{\r\n        try {\r\n            const inputData = {\r\n                billing_type,\r\n                server_id : props.server._id\r\n            }\r\n            const headers ={\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+props.token\r\n            }\r\n\r\n            const result = await axios.post(process.env.REACT_APP_BASE_URL +\"customer_api/server/update_expiredate\",\r\n            inputData , {headers:headers})\r\n            console.log(result.data.server)\r\n            props.onUpdateServer(props.serverIndex,result.data.server)\r\n            if(result.data.error === false){\r\n                setError(false)\r\n                setMessage(result.data.message)\r\n             }\r\n             else{\r\n                setMessage(result.data.status)\r\n                setError(true)\r\n              }\r\n        } catch (error) {\r\n            \r\n            setMessage(\"Process was uncussessful, please try again\")\r\n            setError(true)\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const billingMethodHandler = (method, day)=>{\r\n        let today = new Date(props.server.expire_date)\r\n        today.setDate(new Date(today).getDate() + day)\r\n        today=  format(new Date(today), 'yyyy-MM-dd kk:mm:ss')\r\n        setExpireDate(today)\r\n\r\n        setBillingType(method)\r\n\r\n    }\r\n \r\n    return(\r\n        <div>\r\n              <Modal isOpen={props.modal} toggle={props.modalHandler}  className={className} style={{top:\"80px\"}}>\r\n            <ModalHeader  style={{fontSize:\"20px\", color:\"#007bfc\"}}>Update Expire Date</ModalHeader>\r\n            <ModalBody >\r\n                <br/>\r\n                    { error && message && <div style={{width:\"100%\", color:\"white\",fontSize:\"20px\", padding:\"20px\", backgroundColor:\"red\"}}>{message}</div>}\r\n                    {  !error && message &&  <div style={{width:\"100%\", color:\"white\",fontSize:\"20px\", padding:\"20px\", backgroundColor:\"#007bfc\"}}>{message}</div>}\r\n                <br/>\r\n               {!message && <div style={{textAlign:\"center\"}}>\r\n                    <p style={{ fontSize:\"20px\" , fontWeight:\"bold\", color:\"green\"}}>Your server will expire on&nbsp;  {\"  \"+expireDate}</p>\r\n               \r\n                        <Paper  style={{padding:\"20px\", backgroundColor:\"white\"}}>\r\n                    <p className=\"Title_text_black\">Select Billing Method</p> <br/>\r\n            \r\n                    <div className={(billing_type === \"monthly\" ? \"Selection Locations_div\" :\"Locations_div\") }\r\n                    onClick={()=>billingMethodHandler(\"monthly\",31)}>\r\n                        <span className=\"Title_text_black\">Monthly Billing</span>\r\n                    </div><br/>\r\n               \r\n                    <div  className={(billing_type === \"daily\" ? \"Selection Locations_div\" :\"Locations_div\") }\r\n                    onClick={()=>billingMethodHandler(\"daily\",2)}>\r\n                        <span className=\"Title_text_black\">Daily Billing</span>\r\n                    </div>\r\n               \r\n                        \r\n             </Paper> \r\n             <br/><br/>\r\n             <Button color=\"primary\" onClick={expireDateHandler}>Update Expire Date</Button>&nbsp;&nbsp;&nbsp;\r\n                </div>}<br/>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n            <Button color=\"danger\" onClick={props.modalHandler}>close</Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        token:state.auth.token\r\n    }\r\n}\r\n\r\nconst maspDispatchToProps = dispatch =>{\r\n    return{\r\n        onUpdateServer : (index,server)=> dispatch(actions.update_server_data(index,server))\r\n    }\r\n}\r\nexport default connect(mapStateToProps,maspDispatchToProps)(Update_Expire)","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\servers\\Server_Details.jsx",[],"D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\store\\actions\\server.js",[],"D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\store\\reducers\\server.js",[],"D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\dashboard\\TopCounts.jsx",[],"D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\servers\\Server_createdModal.jsx",[],"D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\container\\pages\\dashboard\\CreateCloudServer.jsx",["324","325"],"import React , {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {connect} from 'react-redux'\r\nimport {Container, Grid, Paper, Button, Typography} from '@material-ui/core'\r\n\r\nimport VultrCloudServer from '../../../components/servers/cloud/VultrCloudServer'\r\nimport vultLogo from '../../assets/vultrlogo.png'\r\n\r\nconst CreateCloudServer = (props)=>{\r\n    const [route, setRoute] = useState(\"\")\r\n    const [packages, setPackages ] = useState([])\r\n    const [locations, setLocations ] = useState([])\r\n\r\n    useEffect(()=>{\r\n        const getPreeData= async () =>{\r\n            try {\r\n                const headers = {\r\n                    'Content-Type':\"application/json\",\r\n                    \"Authorization\":\"Bearer \"+props.token\r\n                }\r\n                const result = await axios.get(process.env.REACT_APP_BASE_URL+\"customer_api/server/server_data\", {headers:headers})\r\n                setLocations(result.data.locations)\r\n                setPackages(result.data.packages)\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        getPreeData()\r\n        return () => {\r\n            setLocations([])\r\n            setPackages([]) // This worked for me\r\n          };\r\n    },[])\r\n    \r\n    const routeHandler = (route)=>{\r\n        setRoute(route)\r\n    }\r\n    const returnHandler = ()=>{\r\n        setRoute(\"\")\r\n    }\r\n\r\n    return(\r\n        <Container>\r\n           {!route &&  <div>\r\n                <p className=\"Title_text\"> Select Server Provider & Continue creating cloud server</p>\r\n                <Grid container spacing ={3}>\r\n                    <Grid item xs={12} sm={6} md={4} lg={4} >\r\n                        <Paper variant=\"outlined\">\r\n                            <div style={{height:\"100px\"}}>\r\n                                <img src= {vultLogo} alt=\"vultrLogo\" style={{width:\"90%\"}}/>\r\n                            </div>\r\n                            <Button variant=\"contained\" color=\"primary\" \r\n                            onClick={()=>routeHandler(\"vultr\")}\r\n                            style={{ width:\"100%\", textTransform:\"none\", fontSize:\"20px\"}}>Continue</Button>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>}\r\n            {route  === \"vultr\" && \r\n             <VultrCloudServer\r\n             packages={packages}\r\n             locations={locations}\r\n             route ={route}\r\n             returnHandler={returnHandler}\r\n              />}\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        token:state.auth.token\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CreateCloudServer)",["326","327"],"D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\servers\\cloud\\VultrCloudServer.jsx",["328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357"],"import React , {useState}from 'react'\r\nimport axios from 'axios'\r\nimport {connect} from 'react-redux'\r\nimport {Container, Button, Divider, Grid, Paper} from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nimport '../Server_Comp.css'\r\nimport Location_Component from '../Select_Location'\r\nimport SnapShot_Component from '../Snapshot'\r\nimport Pakcage_Component from '../Server_Packages'\r\nimport Serverinputs_Component from '../Server_Inputs'\r\nimport ServerCreatedModal from '../Server_createdModal'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      '& > * + *': {\r\n        marginLeft: theme.spacing(2),\r\n      },\r\n    },\r\n    button:{\r\n      minWidth:\"100px\",\r\n      textTransform:\"none\",\r\n      fontSize:\"20px\",\r\n      backgroundColor:\"#007bfc\",\r\n      padding:\"5px 50px\",\r\n      color:\"white\",\r\n  }\r\n  }));\r\n  \r\n\r\nconst CreateCloudServer = (props)=>{\r\n    const classes = useStyles();\r\n    const [OSID, setOSID] = useState()\r\n    const [DCID, setDCID] = useState(\"\")\r\n    const [route, setRoute]= useState(props.route)\r\n    const [package_id, setPackageId] = useState(\"\")\r\n    const [billing_type, setBillingType] = useState(\"\")\r\n    const [label, setLabel] = useState(\"\")\r\n    const [hostname, setHostname] = useState(\"\")\r\n    const [modal, setModal] = useState(false)\r\n    const [spinner, setSprinner] = useState(false)\r\n    const [message, setMessage]= useState(\"\")\r\n\r\n    return(\r\n        <Container>\r\n            <p  onClick={props.returnHandler} className=\"Title_text\"\r\n            style={{cursor:\"pointer\", borderBottom:\"2px #007bff\"}}\r\n            >Return</p>\r\n            <Divider style={{backgroundColor:\"#D3D3D3\"}}/><br/>\r\n\r\n            <Location_Component \r\n            locations={props.locations}\r\n            setDCIDHandler={setDCID}\r\n            DCID = {DCID}\r\n             />\r\n             \r\n            <br/> <br/> <br/> \r\n\r\n            \r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CreateCloudServer","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\servers\\vultr\\Server_Details.jsx",["358","359","360","361","362"],"import React, {useEffect, useState} from 'react'\r\nimport {  useParams, useHistory} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport axios from 'axios'\r\n\r\nimport {Container, Grid, Button, Divider, IconButton} from '@material-ui/core'\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nimport StopServerModal from './details_popup/StopServerModal'\r\nimport RestartServerModal from './details_popup/RestartServerModal'\r\nimport DestroyServerModal from './details_popup/DestroyServerModal'\r\nimport ReinstallServerModal from './details_popup/ReinstallServerModal'\r\nimport LableUpdateModal from './details_popup/UpdateLabelModal'\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport './DetailsPage.css'\r\n\r\nimport US from '../../../container/assets/flag/US.png'\r\nimport CA from '../../../container/assets/flag/CA.png'\r\nimport NL from '../../../container/assets/flag/NL.png'\r\nimport GB from '../../../container/assets/flag/GB.png'\r\nimport DE from '../../../container/assets/flag/DE.png'\r\nimport AU from '../../../container/assets/flag/AU.png'\r\nimport FR from '../../../container/assets/flag/FR.png'\r\nimport JP from '../../../container/assets/flag/JP.png'\r\nimport KR from '../../../container/assets/flag/KR.png'\r\nimport SG from '../../../container/assets/flag/SG.png'\r\n\r\nimport DetailsSkeleton from \"./DetailsPageSkeleton\";\r\nimport ServerTableSkeleton from './TableSkeleton'\r\nconst flag={\r\n    US:US,\r\n    CA:CA,\r\n    NL:NL,\r\n    GB:GB,\r\n    DE:DE,\r\n    AU:AU,\r\n    FR:FR,\r\n    JP:JP,\r\n    KR:KR,\r\n    SG:SG,\r\n}\r\n\r\nconst list=[true, false, false]\r\nconst VultrServerDetails = (props)=>{\r\n    const [server, setServer] = useState({})\r\n    const [showtext, setShowtext] = useState([...list])\r\n    const [stopServerM, setStopServerM]= useState(false)\r\n    const [restartServerM, setRestartServerM]= useState(false)\r\n    const [destroyServerM, setDestroyServerM]= useState(false)\r\n    const [reinstallServerM, setReinstallServerM]= useState(false)\r\n    const [labelUpdateM , setLabelUpdateM] = useState(false)\r\n\r\n    const [message, setMessage] = useState(\"\")\r\n    const [error, setErrors] = useState(false)\r\n    const [label, setLabel] = useState(\"\")\r\n    const [spinner, setSpinner] = useState(false)\r\n    const [copy, setCopy]= useState(\"\")\r\n\r\n    const params = useParams()\r\n    const history = useHistory()\r\n    useEffect(()=>{\r\n        setSpinner(true)\r\n        getServerDetails()\r\n    }, [])\r\n\r\n    const getServerDetails = async ()=>{\r\n        const server_id = params.server_id\r\n        try {\r\n            \r\n            const headers ={\r\n                'Content-Type':\"application/json\",\r\n                \"Authorization\":\"Bearer \"+props.token\r\n            }\r\n            const result = await axios.get(process.env.REACT_APP_BASE_URL+'customer_api/server/details/'+server_id, {headers:headers})\r\n            setServer(result.data.server)\r\n            console.log(result.data.server)\r\n            setSpinner(false)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    const closeModalHandler = (message, error, server)=>{\r\n       \r\n        setMessage( message)\r\n        setErrors( error)\r\n        setRestartServerM(false)\r\n        setStopServerM(false)\r\n        setDestroyServerM(false)\r\n        setLabelUpdateM(false)\r\n        if(server){\r\n            setServer(server)\r\n        }\r\n    }\r\n\r\n    const destroyServerModal = (message, error)=>{\r\n        setMessage( message)\r\n        setErrors( error)\r\n        setDestroyServerM(false)\r\n        if(!error){\r\n            setServer({})\r\n        }\r\n\r\n    }\r\n\r\n    const reinstallServerModalHandler = (message, error, server)=>{\r\n        setMessage( message)\r\n        setErrors( error)\r\n        setReinstallServerM(false)\r\n\r\n        if(server && message){\r\n            console.log(server)\r\n            setServer(server)\r\n        }\r\n        // getServerDetails()\r\n    }\r\n\r\n   \r\n    const changeRead= (val,route)=>{\r\n        let listBoool = [false, false, false, false, false]\r\n        listBoool[val]= true\r\n        setShowtext(listBoool)\r\n    }\r\n\r\n    const closeMessagHandler= ()=>{\r\n        setMessage(\"\")\r\n        setErrors(false)\r\n    }\r\n    \r\n    if(spinner){\r\n        return<DetailsSkeleton/>\r\n    }\r\n    \r\n    let jsx_body=\"\"\r\n    if(showtext[0]){\r\n        jsx_body = <div>\r\n            <Grid container spacing={5}>\r\n                <Grid item xs={12} sm={6} md={4} lg={4}>\r\n                    <div className=\"Details_page_box\">\r\n                      <p  className=\"Details_Sub_Title\">Bandwidth Usage</p>\r\n                      <p> <span className=\"Details_Title\">{server.current_bandwidth_gb} </span>\r\n                           <span  className=\"Details_Sub_Title\"> / {\" \"+server.allowed_bandwidth_gb}GB</span>\r\n                      </p>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={4} lg={4}>\r\n                    <div className=\"Details_page_box\">\r\n                      <p  className=\"Details_Sub_Title\">CPU Usage</p>\r\n                      <p> <span className=\"Details_Title\">{server.cpu} </span>\r\n                      </p>\r\n                    </div>\r\n                </Grid> \r\n                <Grid item xs={12} sm={6} md={4} lg={4}>\r\n                    <div className=\"Details_page_box\">\r\n                      <p  className=\"Details_Sub_Title\">Current Charge</p>\r\n                      <p> <span className=\"Details_Title\">$ {server.monthly_price} </span>\r\n                           <span  className=\"Details_Sub_Title\"> / {server.billing_type}</span>\r\n                      </p>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n             <br/><br/><br/>\r\n             <Grid container spacing={5}>\r\n                 <Grid item xs={12} sm={8} md={4} lg={4}>\r\n                     <div>\r\n                         <p  className=\"Details_Sub_Title\">Location :<span style={{marginRight:\"2.5vw\"}}/><img src={flag[server.country]} width=\"40px\" height=\"auto\" alt={server.country}/> &nbsp;{server.location}</p>\r\n                         <p  className=\"Details_Sub_Title\">IP address :<span style={{marginRight:\"1.3vw\"}}/>{server.server_ip}\r\n                         <CopyToClipboard text={server.server_ip}\r\n                            onCopy={setCopy}>\r\n                            <IconButton><FileCopyIcon style={{color:\"#FF8989\"}}/></IconButton>\r\n                            </CopyToClipboard><br/>{copy ?<span style={{color:\"blue\"}}> {copy}  (copied)</span>:null }\r\n                         </p>\r\n                         <p  className=\"Details_Sub_Title\">Username :<span style={{marginRight:\"1.8vw\"}}/>{server.user}</p>\r\n                         <p  className=\"Details_Sub_Title\">Password :<span style={{marginRight:\"1.8vw\"}}/>{server.password}</p>\r\n\r\n                     </div>\r\n                 </Grid>\r\n                 <Grid item xs={12} sm={8} md={4} lg={4}>\r\n                     <div>\r\n                         <p  className=\"Details_Sub_Title\">CPU :<span style={{marginRight:\"4.3vw\"}}/>{server.cpu}</p>\r\n                         <p  className=\"Details_Sub_Title\">RAM :<span style={{marginRight:\"4.3vw\"}}/>{server.ram}</p>\r\n                         <p  className=\"Details_Sub_Title\">Storage :<span style={{marginRight:\"2.6vw\"}}/>{server.disk}</p>\r\n                         <p  className=\"Details_Sub_Title\">Bandwidth :<span style={{marginRight:\"1vw\"}}/>{server.current_bandwidth_gb +\" of \"+ server.allowed_bandwidth_gb }</p>\r\n\r\n                     </div>\r\n                 </Grid>\r\n                 <Grid item xs={12} sm={8} md={4} lg={4}>\r\n                     <div>\r\n                         <p  className=\"Details_Sub_Title\">Label :<span style={{marginRight:\"1vw\"}}/>{server.server_name}</p>\r\n                         <p  className=\"Details_Sub_Title\">OS  :<span style={{marginRight:\"2.4vw\"}}/>{server.os}</p>\r\n                       \r\n                     </div>\r\n                 </Grid>\r\n             </Grid>\r\n        </div>\r\n    }\r\n\r\n    return(\r\n        <Container>\r\n                          \r\n            { error && message && \r\n            <div className=\"Error_message\">\r\n                    <span className=\"Message\">{message}</span>\r\n                    <p className=\"Close_Message\" onClick={closeMessagHandler}>close</p>\r\n                </div>}\r\n            {  !error && message &&  <div className=\"Success_message\">\r\n                <span className=\"Message\">{message}</span>\r\n            \r\n                    <p className=\"Close_Message\" onClick={closeMessagHandler}>close</p>\r\n            \r\n                </div>}<br/>\r\n                \r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={8} md={8} lg={8}>\r\n                     \r\n                            <p className=\"Details_Title\">{server.label}\r\n                            <IconButton variant=\"contained\" color=\"primary\" onClick={()=>{ setLabelUpdateM(true)}}><EditIcon/></IconButton>&nbsp;&nbsp;<br/>\r\n                            </p>  \r\n                            <p  className=\"Details_Sub_Title\">{server.server_ip}&nbsp;&nbsp;&nbsp;{server.location}&nbsp;&nbsp;&nbsp;{server.expire_date}</p>\r\n                      \r\n\r\n                </Grid>\r\n                <Grid item  xs={12} sm={4} md={4} lg={4}><br/>\r\n                    <IconButton onClick={()=>setStopServerM(true)}><PowerSettingsNewIcon className=\"Details_Icon_Button\" style={{fontSize:\"30px\"}}/></IconButton>\r\n                    <IconButton onClick={()=>setRestartServerM(true)}> <AutorenewIcon className=\"Details_Icon_Button\" style={{fontSize:\"30px\"}}/></IconButton>\r\n                    <IconButton onClick={()=>setReinstallServerM(true)}><SlowMotionVideoIcon className=\"Details_Icon_Button\" style={{fontSize:\"30px\"}}/></IconButton>\r\n                    <IconButton onClick={()=>setDestroyServerM(true)}><DeleteIcon className=\"Details_Icon_Button\" style={{fontSize:\"30px\"}}/></IconButton>\r\n\r\n                </Grid>\r\n            </Grid><br/><br/><br/>\r\n            <Grid container spacing={2} >\r\n               <Grid item sx= {3} sm={2} md={1} lg={2} style={{borderBottom: showtext[0] && \"2px solid #007bff\", width: showtext[0] && \"100%\" }}>\r\n                  <p className=\"Profile_Tab\"  onClick={()=>{changeRead(0, \"\")}} >Overview</p>\r\n               </Grid>&nbsp;&nbsp;\r\n               <Grid item sx= {3} sm={2} md={2} lg={1}   style={{borderBottom: showtext[1] && \"2px solid #007bff\", width: showtext[1] && \"100%\"  }}>\r\n                  <p className=\"Profile_Tab\"  onClick={()=>{changeRead(1, \" backup\")}} >Backups</p>\r\n               </Grid>\r\n           </Grid>\r\n           <Divider style={{marginTop:\"8px\"}}/>\r\n           <div style={{textAlign:\"right\"}}>\r\n               <IconButton onClick={()=>history.push(\"/dashboard/create_vpn_server\")} style={{marginTop:\"-2.6vw\"}}>\r\n                   <AddCircleIcon style={{color:\"#007bfc\", width:\"60px\",height:\"60px\"}}/>\r\n               </IconButton>\r\n           </div>\r\n           {jsx_body}\r\n\r\n           {stopServerM &&\r\n            <StopServerModal\r\n               modal = {stopServerM}\r\n               modalHandler = {closeModalHandler}\r\n               server_id = {server.server_id}\r\n               route = {server.route}\r\n               token ={props.token}\r\n            />}\r\n\r\n\r\n            { restartServerM && <RestartServerModal\r\n                    modal = {restartServerM}\r\n                    modalHandler = {closeModalHandler}\r\n                    server_id = {server.server_id}\r\n                    route = {server.route}\r\n                    token ={props.token}\r\n            />}\r\n\r\n              { labelUpdateM && <LableUpdateModal\r\n                    modal = {labelUpdateM}\r\n                    modalHandler = {closeModalHandler}\r\n                    server_id = {server.server_id}\r\n                    route = {server.route}\r\n                    token ={props.token}\r\n                    label ={server.server_name}\r\n            />}\r\n\r\n                { destroyServerM && <DestroyServerModal\r\n                    modal = {destroyServerM}\r\n                    modalHandler = {destroyServerModal}\r\n                    server_id = {server.server_id}\r\n                    route = {server.route}\r\n                    token ={props.token}\r\n            />} \r\n            { reinstallServerM && <ReinstallServerModal\r\n                    modal = {reinstallServerM}\r\n                    modalHandler = {reinstallServerModalHandler}\r\n                    server_id = {server.server_id}\r\n                    route = {server.route}\r\n                    token ={props.token}\r\n            />}     \r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        token:state.auth.token\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(VultrServerDetails)\r\n\r\n","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\servers\\vultr\\details_popup\\StopServerModal.jsx",["363"],"D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\servers\\vultr\\details_popup\\RestartServerModal.jsx",[],"D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\servers\\vultr\\details_popup\\DestroyServerModal.jsx",[],"D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\servers\\vultr\\details_popup\\ReinstallServerModal.jsx",[],"D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\container\\pages\\dashboard\\vpn_server\\VpnServers.jsx",[],"D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\container\\pages\\dashboard\\vpn_server\\CreateVpnServer.jsx",["364","365"],"D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\servers\\vpn_server_table.jsx",["366","367","368","369","370","371","372","373","374","375","376"],"import React , {useEffect , useState} from 'react'\r\n\r\nimport {connect} from 'react-redux'\r\nimport {NavLink} from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport ZoomOutMapIcon from '@material-ui/icons/ZoomOutMap';\r\nimport RotateLeftIcon from '@material-ui/icons/RotateLeft';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport {IconButton, Divider, Grid} from '@material-ui/core' \r\nimport RedoIcon from '@material-ui/icons/Redo';\r\nimport DeleteModal from './Destroy'\r\nimport ExpiredateUpdateModal from './Expiredate_Update'\r\nimport ServerDetailsModal from \"./Server_Details\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz'\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\n\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew'\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew'\r\nimport DiscFullIcon from '@material-ui/icons/DiscFull';\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\n\r\nimport * as actions from '../../store/actions/index'\r\n\r\nimport StopServerModal from './vultr/details_popup/StopServerModal'\r\nimport RestartServerModal from './vultr/details_popup/RestartServerModal'\r\nimport ReinstallServerModal from './vultr/details_popup/ReinstallServerModal'\r\nimport DestroyServerModal from './vultr/details_popup/DestroyServerModal'\r\nimport LableUpdateMOdal from './vultr/details_popup/UpdateLabelModal'\r\n\r\nimport VpnFilter from './vultr/vpn_filter'\r\nimport ServerRouteFilter from './vultr/server_filter'\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport TableSkeleton from './vultr/TableSkeleton'\r\n\r\nimport US from '../../container/assets/flag/US.png'\r\nimport CA from '../../container/assets/flag/CA.png'\r\nimport NL from '../../container/assets/flag/NL.png'\r\nimport GB from '../../container/assets/flag/GB.png'\r\nimport DE from '../../container/assets/flag/DE.png'\r\nimport AU from '../../container/assets/flag/AU.png'\r\nimport FR from '../../container/assets/flag/FR.png'\r\nimport JP from '../../container/assets/flag/JP.png'\r\nimport KR from '../../container/assets/flag/KR.png'\r\nimport SG from '../../container/assets/flag/SG.png'\r\n\r\n\r\n\r\nconst flag={\r\n    US:US,\r\n    CA:CA,\r\n    NL:NL,\r\n    GB:GB,\r\n    DE:DE,\r\n    AU:AU,\r\n    FR:FR,\r\n    JP:JP,\r\n    KR:KR,\r\n    SG:SG,\r\n}\r\n\r\nconst columns = [\r\n    {id:\"server_data\", label:\"Server\", minWidth:150},\r\n   { id: 'location', label: 'Location', minWidth: 100 },\r\n   { id: 'expire_date', label: 'Expire Date', minWidth: 100 },\r\n   { id: 'billing_type', label: 'Billing Type', minWidth: 40 },\r\n   {\r\n    id: 'status',\r\n    label: 'Status',\r\n    minWidth: 100,\r\n    format: (value) => value.toLocaleString('en-US'),\r\n   },\r\n\r\n  {\r\n    id: 'action',\r\n    label: 'Action',\r\n    minWidth: 12,\r\n    align: 'left',\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  \r\n    root: {\r\n        width: '100%',\r\n    },\r\n    container: {\r\n        maxHeight: \"auto\",\r\n    },\r\n});\r\n\r\nconst list =[true, false]\r\n\r\nconst ServerTable = (props)=>{\r\n    const classes = useStyles();\r\n    const [showtext, setShowtext] = useState([...list])\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    // const [servers, setServers] = useState(props.servers)\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [deleteModal, setDeleteModal] = useState(false)\r\n    const [expireDateModal, setExpireDateModal] = useState(false)\r\n    const [deatilsModal, setDetailsModal] = useState(false)\r\n\r\n    const [serverData, setServerData] = useState()\r\n    const [serverIndex, setServerIndex ] = useState()\r\n    \r\n    const [error, setError] = useState(false)\r\n    const [message, setMessage]= useState(\"\")\r\n\r\n    const [spinner, setSpinner] = useState(false)\r\n    const [serverId, setServerId] = useState(\"\")\r\n    const [route, setRoute] = useState(\"vultr\")\r\n    const [stopServerM, setStopServerM]= useState(false)\r\n    const [restartServerM, setRestartServerM]= useState(false)\r\n    const [destroyServerM, setDestroyServerM]= useState(false)\r\n    const [reinstallServerM, setReinstallServerM]= useState(false)\r\n    const [labelUpdateM , setLabelUpdateM] = useState(false)\r\n    const [vpn_type, setVpnType] = useState(\"All\");\r\n    const [routeProvider, setRouteProvider] = useState(\"\")\r\n     const [label, setLabel] = useState(\"\")\r\n    const [copy, setCopy]= useState(\"\")\r\n    const [loader, setLoader] = useState(false)\r\n\r\n    useEffect(()=>{\r\n        getServers(route)\r\n    },[])\r\n\r\n    const changeRead= (val)=>{\r\n        let listBoool = [false, false]\r\n        listBoool[val]= true\r\n        setShowtext(listBoool)\r\n        \r\n    }\r\n    const getServers = async (server_route)=>{\r\n        try {\r\n           setLoader(true)\r\n            setRouteProvider(server_route)\r\n            console.log(server_route)\r\n            const headers ={\r\n                'Content-Type':\"application/json\",             \r\n                \"Authorization\":\"Bearer \"+props.token,\r\n            }\r\n        \r\n            const result = await axios.get(process.env.REACT_APP_BASE_URL+\"customer_api/server/vpn_server?route=\"+server_route, {headers:headers})\r\n            // console.log(result.data.servers)     \r\n            // setServers(result.data.servers)\r\n            setLoader(false)\r\n            props.onAddServers(result.data.servers)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n    \r\n    const otherServer = ()=>{\r\n        setLoader(true)\r\n    \r\n\r\n        props.onAddServers([])\r\n\r\n        setTimeout(() => {\r\n        setLoader(false)\r\n            \r\n        }, 1000);\r\n\r\n    }\r\n    \r\n    const serverRouteHandler = (server, index)=>{\r\n        setServerId(server.server_id)\r\n        setRoute(server.route)\r\n        setServerIndex(index)\r\n        setLabel(server.server_name)\r\n    }\r\n    const closeModalHandler = (message, error, server)=>{\r\n\r\n\r\n        console.log(serverIndex)\r\n        if(server){\r\n            props.onUpdateServer(serverIndex, server)\r\n        }\r\n        \r\n\r\n        setAnchorEl(null);\r\n        setMessage( message)\r\n        setError( error)\r\n        setRestartServerM(false)\r\n        setStopServerM(false)\r\n        setDestroyServerM(false)\r\n        setLabelUpdateM(false)\r\n        setServerIndex()\r\n\r\n    }\r\n\r\n    const destroyServerModal = (message, error)=>{\r\n        props.onDeleteServer(serverIndex)\r\n        setAnchorEl(null);\r\n        setMessage( message)\r\n        setError( error)\r\n        setDestroyServerM(false)\r\n\r\n    }\r\n\r\n    const reinstallServerModalHandler = (message, error, server)=>{\r\n        console.log(server)\r\n        console.log(serverIndex)\r\n        props.onUpdateServer(serverIndex, server)\r\n        setAnchorEl(null);\r\n        setMessage( message)\r\n        setError( error)\r\n        setReinstallServerM(false)\r\n\r\n        // getServerDetails()\r\n    }\r\n\r\n    const checkServerStatus = async(server_id, route, index)=>{\r\n        try {\r\n            setServerId(server_id)\r\n            setSpinner(true)\r\n            const inputData =  {\r\n                server_id, route\r\n            }\r\n            const headers = {\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+props.token\r\n            }\r\n            setMessage(\"Checking server status.... Please wait!\")\r\n            setError(false)\r\n\r\n            let  result = await axios.post(process.env.REACT_APP_BASE_URL+\"customer_api/server/checkStatus\", inputData, {headers:headers})\r\n            const preResult = result.data\r\n            // result = await axios.get(process.env.REACT_APP_BASE_URL+\"customer_api/server\", {headers:headers})\r\n            \r\n            // setServers(result.data.servers)\r\n            setSpinner(false)\r\n            if(!preResult.error){\r\n                props.onUpdateServer(index,preResult.server)\r\n                setError(false)\r\n                setMessage(preResult.message)\r\n            }\r\n            else{\r\n                setMessage(preResult.status)\r\n                setError(true)\r\n            }\r\n            \r\n        } catch (error) {\r\n            setSpinner(false)\r\n            setMessage(\"Please try again! \"+error.message)\r\n            setError(true)\r\n        }\r\n    }\r\n    const restartServerHandler = async(server_id, route, index)=>{\r\n        try {\r\n            setSpinner(true)\r\n            setServerId(server_id)\r\n            const inputData =  {\r\n                server_id, route\r\n            }\r\n            const headers = {\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+props.token\r\n            }\r\n            setMessage(\"Re-starting.... Please wait!\")\r\n            console.log(inputData)\r\n            let  result = await axios.post(process.env.REACT_APP_BASE_URL+\"customer_api/server/restart\", inputData, {headers:headers})\r\n\r\n            props.onUpdateServer(index, result.data.server)\r\n            if(!result.data.error){\r\n                setServerId(\"\")\r\n                setError(false)\r\n                setMessage(result.data.message)\r\n                setSpinner(false)\r\n            }\r\n            else{\r\n                setServerId(\"\")\r\n                setMessage(result.data.status)\r\n                setError(true)\r\n                setSpinner(false)\r\n\r\n            }\r\n            // setServers(result.data.servers)\r\n        } catch (error) {\r\n            setServerId(\"\")\r\n            setMessage(\"Please try again! \"+error.message)\r\n            setError(true)\r\n            setSpinner(false)\r\n\r\n        }\r\n    }\r\n    const deleteModalHandler = (server, index)=>{\r\n        setServerData(server)\r\n        setDeleteModal(!deleteModal)\r\n        setServerIndex(index)\r\n    }\r\n    const detailsModalHandler = (server)=>{\r\n        setServerData(server)\r\n        setDetailsModal(!deatilsModal)\r\n    }\r\n\r\n    const expireDateModalHandler = (server, index)=>{\r\n        setServerData(server)\r\n        setServerIndex(index)\r\n        setExpireDateModal(!expireDateModal)\r\n    }\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n      };\r\n    \r\n      const handleClose = () => {\r\n        setAnchorEl(null);\r\n      };\r\n\r\n    \r\n\r\n    const  createData= (server) =>{\r\n\r\n       const billing_type = <span style={{color:\"grey\", fontSize:\"18px\"}}>{server.billing_type }</span>\r\n        const server_data =<div>\r\n             <span className=\"Table_Title\">\r\n                <NavLink to={`/dashboard/server_details/${server.server_id}`} style={{textDecoration:\"none\", color:\"grey\"}}>\r\n                     {server.server_name}\r\n                 </NavLink> \r\n                </span><br/>\r\n            {/* <IconButton variant=\"contained\" color=\"primary\" onClick={()=>{serverRouteHandler(server, server.key); setLabelUpdateM(true)}}><EditIcon/></IconButton>&nbsp;&nbsp;<br/> */}\r\n            <span style={{color:\"grey\"}}>{ server.ram+\" \"+server.os+\" \"+server.server_ip} </span>\r\n            <CopyToClipboard text={server.server_ip}\r\n                onCopy={setCopy}>\r\n                <IconButton onClick={()=>setServerId(server.server_id)}><FileCopyIcon style={{color:\"#FF8989\"}}/></IconButton>\r\n            </CopyToClipboard><br/>{copy&& serverId === server.server_id ?<span style={{color:\"blue\"}}> {copy}  (copied)</span>:null }\r\n        </div>\r\n        \r\n        const location =<p style={{color:\"grey\", fontSize:\"20px\"}}><img src={flag[server.country]} width=\"40px\" height=\"auto\" alt={server.country}/> &nbsp;{server.location }</p>\r\n        \r\n        const expire_date =<div>\r\n              <span style={{color:\"grey\", fontSize:\"18px\"}}>{server.expire_date }</span>&nbsp;&nbsp;\r\n              {/* <IconButton variant=\"contained\" color=\"primary\" onClick={()=>expireDateModalHandler(server, server.key)}><EditIcon/></IconButton>&nbsp;&nbsp; */}\r\n            </div> \r\n       \r\n            const action = <div>\r\n            <IconButton aria-controls=\"simple-menu\" aria-haspopup=\"true\"  onClick={(e)=>{serverRouteHandler(server,server.key);handleClick(e)}}><MoreHorizIcon style={{color:\"grey\"}}/></IconButton>\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose ={handleClose}\r\n            >\r\n                \r\n                <MenuItem onClick={handleClose}>\r\n                    <NavLink to={`/dashboard/server_details/${serverId}`} style={{textDecoration:\"none\", color:\"grey\"}}>\r\n                        <InfoOutlinedIcon/> &nbsp; Server Details\r\n                    </NavLink> \r\n                </MenuItem><br/>\r\n                <Divider/><br/>\r\n                <MenuItem onClick={handleClose} style={{color:\"grey\"}}><span  onClick={()=>setStopServerM(true)} ><PowerSettingsNewIcon/> &nbsp; Server Stop</span></MenuItem>\r\n                <MenuItem onClick={handleClose} style={{color:\"grey\"}}><span onClick={()=>setRestartServerM(true)} ><AutorenewIcon/> &nbsp; Server Restart</span></MenuItem>\r\n                <MenuItem  onClick={handleClose} style={{color:\"grey\"}}><span onClick={()=>setReinstallServerM(true)}><DiscFullIcon/> &nbsp; Server Re-install</span></MenuItem>\r\n                <Divider/>\r\n                <MenuItem  onClick={handleClose} style={{color:\"red\"}}><span onClick={()=>setDestroyServerM(true)}><DeleteIcon/> &nbsp; Server Destroy</span></MenuItem>\r\n\r\n            </Menu>\r\n     \r\n        </div>\r\n        \r\n        const status = <div>\r\n                {spinner && serverId === server.server_id  ? <CircularProgress  style={{color:\"#007bfc\"}} /> :\r\n                  <div> <span style={{color:\"grey\", fontSize:\"18px\"}}>{server.power_status }</span>&nbsp;&nbsp;\r\n                       <IconButton onClick={()=>checkServerStatus(server.server_id,server.route, server.key)}><SlowMotionVideoIcon style={{color:\"#007bfc\"}}  /> </IconButton> </div>}&nbsp;&nbsp;\r\n            </div>\r\n            \r\n        return {server_data, location, expire_date ,billing_type,status, action};\r\n    }\r\n\r\n    const closeMessagHandler = ()=>{\r\n        setError(false)\r\n        setMessage(\"\")\r\n    }\r\n    if(loader ) {\r\n        return <TableSkeleton/>\r\n    }\r\n    const rows = []\r\n    if(vpn_type === \"All\"){\r\n\r\n        props.servers.map((server, index)=>{\r\n            return(<div key={index}>\r\n            { server &&  rows.push(createData({...server,key: index}))}\r\n             </div>)\r\n        })\r\n    }\r\n    else{\r\n        props.servers.map((server, index)=>{\r\n            if(server.vpn_type === vpn_type){\r\n             return(<div key={index}>\r\n              { server &&  rows.push(createData({...server,key: index}))}\r\n               </div>)\r\n             }\r\n        })\r\n    }\r\n\r\n    \r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n\r\n    return(\r\n\r\n        <div>\r\n          <br/>\r\n            <Typography variant=\"h4\" \r\n            style={{textAlign:\"left\",color:\"#007bfc\", fontWeight:\"bolder\",  width:\"100%\", background:\"linear-gradient(90deg, rgba(224,224,224,100) 0%, rgba(255,255,255,0) 70%)\", padding:\"20px\", borderRadius:\"10px\"}}>Server table </Typography><br/>\r\n                \r\n                <Grid container spacing={2} >\r\n               <Grid item sx= {3} sm={2} md={1} lg={1} style={{borderBottom: showtext[0] && \"2px solid #007bff\", width: showtext[0] && \"100%\" }}>\r\n                  <p className=\"Profile_Tab\"  onClick={()=>{changeRead(0);getServers(\"vultr\")}} >Vultr</p>\r\n               </Grid>&nbsp;&nbsp;\r\n               <Grid item sx= {3} sm={2} md={2} lg={2}   style={{borderBottom: showtext[1] && \"2px solid #007bff\", width: showtext[0] && \"100%\"  }}>\r\n                  <p className=\"Profile_Tab\"  onClick={()=>{changeRead(1);otherServer(\"other\")}} >Other</p>\r\n               </Grid>\r\n           </Grid>\r\n               <Divider style={{marginTop:\"9px\"}}/>\r\n\r\n                <br/>\r\n                { error && message && \r\n                    <div className=\"Error_message\">\r\n                        <span className=\"Message\">{message}</span>\r\n                        <p className=\"Close_Message\" onClick={closeMessagHandler}>close</p>\r\n                        </div>}\r\n                {  !error && message &&  <div className=\"Success_message\">\r\n                        <span className=\"Message\">{message}</span>\r\n                    \r\n                        <p className=\"Close_Message\" onClick={closeMessagHandler}>close</p>\r\n                    \r\n                    </div>}\r\n            <br/>\r\n            <div style={{display:\"flex\", flexFlow:\"row-reverse\"}}>\r\n            {/* <ServerRouteFilter\r\n               routeProvider ={routeProvider}\r\n               getServers={getServers}\r\n               /> &nbsp; &nbsp; &nbsp; */}\r\n            <VpnFilter\r\n                setVpnType={setVpnType}\r\n                vpn_type={vpn_type}\r\n            />\r\n            </div>\r\n            <br/>\r\n\r\n            <Paper className={classes.root}>\r\n             <TableContainer className={classes.container}>\r\n        \r\n                <Table stickyHeader aria-label=\"sticky table\" >\r\n                <TableHead >\r\n                    <TableRow >\r\n                    {columns.map((column) => (\r\n                        <TableCell\r\n                        key={column.id}\r\n                        align={column.align}\r\n                        style={{ minWidth: column.minWidth, color:\"grey\", fontSize:\"18px\"}}\r\n                        >\r\n                        {column.label}\r\n                        </TableCell>\r\n                    ))}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\r\n                    return (\r\n                        <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                        {columns.map((column, index) => {\r\n                            const value = row[column.id];\r\n                        \r\n                            return (\r\n                            <TableCell key={index} align={column.align}>\r\n                                {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                            </TableCell>\r\n                            );\r\n                        })}\r\n                        </TableRow>\r\n                    );\r\n                    })}\r\n                </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n                rowsPerPageOptions={[10, 25, 100]}\r\n                component=\"div\"\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n        </Paper>\r\n      \r\n\r\n                {deleteModal &&    <DeleteModal \r\n                                server={serverData} \r\n                                modalHandler={deleteModalHandler}\r\n                                serverIndex={serverIndex}\r\n                                modal={deleteModal}/>}  \r\n\r\n                {expireDateModal && <ExpiredateUpdateModal \r\n                                    server={serverData} \r\n                                    serverIndex={serverIndex}\r\n                                    modalHandler={expireDateModalHandler}\r\n                                    modal={expireDateModal}/>}  \r\n                {deatilsModal && <ServerDetailsModal server={serverData} modalHandler={detailsModalHandler} modal={deatilsModal}/>}  \r\n\r\n\r\n\r\n\r\n        {stopServerM &&\r\n            <StopServerModal\r\n               modal = {stopServerM}\r\n               modalHandler = {closeModalHandler}\r\n               server_id = {serverId}\r\n               route = {route}\r\n               token ={props.token}\r\n            />}\r\n\r\n\r\n            { restartServerM && <RestartServerModal\r\n                    modal = {restartServerM}\r\n                    modalHandler = {closeModalHandler}\r\n                    server_id = {serverId}\r\n                    route = {route}\r\n                    token ={props.token}\r\n            />}\r\n\r\n                { labelUpdateM && <LableUpdateMOdal\r\n                    modal = {labelUpdateM}\r\n                    modalHandler = {closeModalHandler}\r\n                    server_id = {serverId}\r\n                    route = {route}\r\n                    token ={props.token}\r\n                    label ={label}\r\n            />}\r\n\r\n                { destroyServerM && <DestroyServerModal\r\n                    modal = {destroyServerM}\r\n                    modalHandler = {destroyServerModal}\r\n                    server_id = {serverId}\r\n                    route = {route}\r\n                    token ={props.token}\r\n            />} \r\n            { reinstallServerM && <ReinstallServerModal\r\n                    modal = {reinstallServerM}\r\n                    modalHandler = {reinstallServerModalHandler}\r\n                    server_id = {serverId}\r\n                    route = {route}\r\n                    token ={props.token}\r\n            />} \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        token:state.auth.token,\r\n        servers:state.server.servers\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return{\r\n        onAddServers :(servers)=> dispatch(actions.all_serve_data(servers)),\r\n        onUpdateServer :(index, server)=> dispatch(actions.update_server_data(index, server)),\r\n        onDeleteServer:(index)=>dispatch(actions.delete_server(index))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ServerTable)\r\n","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\servers\\vultr\\vpn_filter.jsx",["377"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    display: \"block\",\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  }\r\n}));\r\n\r\nexport default function ServerTypeFilter(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n \r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <div style={{textAlign:\"right\"}}>\r\n      \r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"open-select-label\">VPN type</InputLabel><br/>\r\n        <Select\r\n          labelId=\"open-select-label\"\r\n          id=\"open-select\"\r\n          open={open}\r\n          onClose={handleClose}\r\n          onOpen={handleOpen}\r\n          value={props.vpn_type}\r\n          onChange={(event)=>props.setVpnType(event.target.value)}\r\n          style={{fontSize:\"20px\", textAlign:\"left\"}}\r\n        >\r\n            <MenuItem value=\"All\">\r\n            <em>all vpn</em>\r\n          </MenuItem>\r\n          <MenuItem value=\"ssl\" style={{fontSize:\"20px\", textAlign:\"left\"}}>ssl vpn</MenuItem>\r\n          <MenuItem value=\"ssh\" style={{fontSize:\"20px\", textAlign:\"left\"}}>ssh vpn</MenuItem>\r\n\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\servers\\Vpn_vultr_server.jsx",["378","379","380","381","382","383","384","385","386","387","388","389"],"import React , {useState, useEffect} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {connect} from 'react-redux'\r\nimport {Container, Button, Divider, Grid, Paper} from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport './Server_Comp.css'\r\nimport Location_Component from './Select_Location'\r\nimport SnapShot_Component from './Snapshot'\r\nimport Pakcage_Component from './Server_Packages'\r\nimport Serverinputs_Component from './Server_Inputs'\r\nimport ServerCreatedModal from './Server_createdModal'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n  button:{\r\n    minWidth:\"100px\",\r\n    textTransform:\"none\",\r\n    fontSize:\"20px\",\r\n    backgroundColor:\"#007bfc\",\r\n    padding:\"5px 50px\",\r\n    color:\"white\",\r\n}\r\n}));\r\n\r\n\r\n\r\nconst Vultr_Server = (props)=>{\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [OSID, setOSID] = useState(164)\r\n    const [DCID, setDCID] = useState(\"\")\r\n    const [server_type, setServerType] = useState(\"vpn\")\r\n    const [vpn_type, setVpnType]= useState(\"\")\r\n    const [country,setCountry] = useState(\"\")\r\n    const [SNAPSHOTID , setSNAPSHOTID] = useState(\"\")\r\n    const [route, setRoute]= useState(props.route)\r\n    const [package_id, setPackageId] = useState(\"\")\r\n    const [billing_type, setBillingType] = useState(\"monthly\")\r\n\r\n    const [fields, setFields] = useState([{ label: \"\", hostname: \"\" }])\r\n    const [hostname, setHostname] = useState([{ hostname: \"\" }])\r\n\r\n    // const [hostname, setHostname] = useState(label)\r\n\r\n    const [modal, setModal] = useState(false)\r\n    const [spinner, setSprinner] = useState(false)\r\n    const [message, setMessage]= useState(\"\")\r\n\r\n\r\n    const  labelHandleChange=(i, event) =>{\r\n        const values = [...fields];\r\n        values[i].label = event.target.value;\r\n        values[i].hostname = event.target.value;\r\n\r\n        setFields(values);\r\n      }\r\n\r\n      const  hostnameHandleChange=(i, event) =>{\r\n        const host = [...fields]\r\n        host[i].hostname = event.target.value;\r\n        setFields(host)\r\n\r\n      }\r\n\r\n      const handleAdd=()=> {\r\n        const values = [...fields];\r\n        values.push({ label: \"\",hostname: \"\" });\r\n        setFields(values);\r\n      }\r\n      \r\n\r\n\r\n    const cancleModal = ()=>{\r\n        setModal(false)\r\n        setMessage(\"\")\r\n        history.push(\"/dashboard/vpn_servers\")\r\n\r\n    }\r\n    console.log(vpn_type)\r\n    const handleServer = async ()=>{\r\n        try {\r\n            //  = []\r\n            const label =[]\r\n            const hostname = []\r\n\r\n            let subIndex =0\r\n             fields.map(field => {\r\n\r\n                 if(field.label.length>0){\r\n                    label[subIndex]= field.label\r\n                    hostname[subIndex]= field.hostname\r\n                    subIndex++\r\n                 }\r\n\r\n                return  null \r\n              })\r\n            console.log(label)\r\n            console.log(hostname)\r\n\r\n            setSprinner(true)\r\n            const inputData =  {\r\n                OSID, DCID, SNAPSHOTID, label, hostname, route, country, server_type, vpn_type, package_id, billing_type\r\n            }\r\n            const headers = {\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+props.token\r\n            }\r\n            \r\n            let result = await axios.post(process.env.REACT_APP_BASE_URL+\"customer_api/server\", inputData, {headers:headers})\r\n            setSprinner(false)\r\n            setMessage( <p style={{color:\"green\", fontSize:\"20px\",fontWeight:\"bolder\"}}>{result.data.message}</p>)\r\n          \r\n            setDCID(\"\")\r\n            setSNAPSHOTID(\"\")\r\n            setPackageId(\"\")\r\n            setBillingType(\"\")\r\n            setFields([{ label: \"\", hostname: \"\" }])\r\n            // setLabel(\"\")\r\n            // setHostname(\"\")\r\n            setModal(true)\r\n            \r\n\r\n\r\n        } catch (error) {\r\n           console.log(error)\r\n            setSprinner(false)\r\n            setModal(true)\r\n            setMessage( <p style={{color:\"red\", fontSize:\"25px\", fontWeight:\"bolder\"}}> We are unable to create server. <br/>Please try again!</p>)\r\n         \r\n        }\r\n    }\r\n    return(\r\n        <Container>\r\n            <p  onClick={props.returnHandler} className=\"Title_text\"\r\n            style={{cursor:\"pointer\", borderBottom:\"2px #007bff\"}}\r\n            >Return</p>\r\n            <Divider style={{backgroundColor:\"#D3D3D3\"}}/><br/>\r\n            \r\n            <Location_Component \r\n            locations={props.locations}\r\n            setDCIDHandler={setDCID}\r\n            setCountry = {setCountry}\r\n            DCID = {DCID}\r\n             />\r\n             \r\n            <br/> <br/> <br/> \r\n            <hr style={{backgroundColor:\"#007bff\"}}/>\r\n            <br/>  \r\n\r\n            <SnapShot_Component\r\n               SNAPSHOTID={SNAPSHOTID}\r\n               setSNAPSHOTID ={setSNAPSHOTID}\r\n               snpashots ={props.snapshots}\r\n               setVpnType ={setVpnType}\r\n            />\r\n\r\n            <br/>  \r\n            <hr style={{backgroundColor:\"#007bff\"}}/>\r\n            <br/>  \r\n\r\n            <Pakcage_Component\r\n               packages ={props.packages}\r\n               route={route}\r\n               setPackageId = {setPackageId}\r\n               package_id = {package_id}\r\n               setBillingType={setBillingType}\r\n               billing_type={billing_type}\r\n            />\r\n            <br/>  \r\n            <hr style={{backgroundColor:\"#007bff\"}}/>\r\n            <br/>  \r\n\r\n            <Serverinputs_Component \r\n            setLabel={labelHandleChange} \r\n            setHostname={hostnameHandleChange} \r\n            fields={fields}\r\n            handleAdd={handleAdd}\r\n            />\r\n\r\n           \r\n            {spinner ? <CircularProgress size={80}/>:\r\n           <Button variant=\"contained\" color=\"primary\" onClick={handleServer} className={classes.button}>\r\n                Create Server\r\n                </Button>}<br/><br/><br/>\r\n\r\n\r\n          {modal && <ServerCreatedModal\r\n                   modal={modal}\r\n                   modalHandler = {cancleModal}\r\n                   message={message}\r\n                   />}\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        token:state.auth.token\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Vultr_Server)","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\servers\\vultr\\server_filter.jsx",["390"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    display: \"block\",\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  }\r\n}));\r\n\r\nexport default function ControlledOpenSelect(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n \r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <div style={{textAlign:\"right\"}}>\r\n      \r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"open-select-label\">Server type</InputLabel><br/>\r\n        <Select\r\n          labelId=\"open-select-label\"\r\n          id=\"open-select\"\r\n          open={open}\r\n          onClose={handleClose}\r\n          onOpen={handleOpen}\r\n          value={props.routeProvider}\r\n          onChange={(event)=>props.getServers(event.target.value)}\r\n          style={{fontSize:\"20px\", textAlign:\"left\"}}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>all server</em>\r\n          </MenuItem>\r\n          <MenuItem value=\"vultr\" style={{fontSize:\"20px\", textAlign:\"left\"}}>Vultr</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\container\\pages\\dashboard\\vpn_server\\CloudServer.jsx",[],"D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\container\\pages\\dashboard\\vpn_server\\CreateCloudServer.jsx",["391","392"],"import React , {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {connect} from 'react-redux'\r\nimport {Container, Grid, Paper, Button, Typography} from '@material-ui/core'\r\nimport VultServer from '../../../../components/servers/Vpn_vultr_server'\r\nimport vultLogo from '../../../assets/vultrlogo.png'\r\n\r\nconst CreateCloudserver = (props)=>{\r\n    const [route, setRoute] = useState(\"\")\r\n    const [packages, setPackages ] = useState([])\r\n    const [snapshots, setSnapshots ] = useState([])\r\n    const [locations, setLocations ] = useState([])\r\n\r\n    useEffect(()=>{\r\n        const getPreeData= async () =>{\r\n            try {\r\n                const headers = {\r\n                    'Content-Type':\"application/json\",\r\n                    \"Authorization\":\"Bearer \"+props.token\r\n                }\r\n                const result = await axios.get(process.env.REACT_APP_BASE_URL+\"customer_api/server/server_data_vultr\", {headers:headers})\r\n                setLocations(result.data.locations)\r\n                setPackages(result.data.packages)\r\n                setSnapshots(result.data.snapshots)\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        getPreeData()\r\n        return () => {\r\n            setLocations([])\r\n            setPackages([])\r\n            setSnapshots([]) // This worked for me\r\n          };\r\n    },[])\r\n    \r\n    const routeHandler = (route)=>{\r\n        setRoute(route)\r\n    }\r\n    const returnHandler = ()=>{\r\n        setRoute(\"\")\r\n    }\r\n\r\n    return(\r\n        <Container>\r\n           {!route &&  <div>\r\n                <p className=\"Title_text\"> Select Server Provider & Continue creating server</p>\r\n                <Grid container spacing ={3}>\r\n                    <Grid item xs={12} sm={6} md={4} lg={4} >\r\n                        <Paper variant=\"outlined\">\r\n                            <div style={{height:\"100px\"}}>\r\n                                <img src= {vultLogo} alt=\"vultrLogo\" style={{width:\"90%\"}}/>\r\n                            </div>\r\n                            <Button variant=\"contained\" color=\"primary\" \r\n                            onClick={()=>routeHandler(\"vultr\")}\r\n                            style={{ width:\"100%\", textTransform:\"none\", fontSize:\"20px\"}}>Continue</Button>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>}\r\n            {route  === \"vultr\" && \r\n             <VultServer\r\n             packages={packages}\r\n             locations={locations}\r\n             snapshots={snapshots}\r\n             route ={route}\r\n             returnHandler={returnHandler}\r\n              />}\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        token:state.auth.token\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(CreateCloudserver)","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\servers\\vultr\\details_popup\\UpdateLabelModal.jsx",[],"D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\servers\\vultr\\DetailsPageSkeleton.jsx",["393","394","395","396","397"],"import React, {useEffect, useState} from 'react'\r\n\r\nimport {Container, Grid, Button, Divider, IconButton} from '@material-ui/core'\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\n\r\nconst detailspageSkelaton = ()=>{\r\n    \r\n\r\n        let jsx_body = <div>\r\n            <Grid container spacing={5}>\r\n                <Grid item xs={12} sm={6} md={4} lg={4}>\r\n                    \r\n                     <Skeleton variant=\"rect\" width=\"100%\" animation=\"pulse\" height=\"50px\"/><br/> \r\n                     <Skeleton variant=\"rect\" width=\"100%\" animation=\"wave\" height=\"30px\"/><br/> \r\n                     <Skeleton variant=\"rect\" width=\"100%\" height=\"20px\"/><br/> \r\n                  \r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={4} lg={4}>\r\n                      <Skeleton variant=\"rect\" width=\"100%\" animation=\"wave\" height=\"50px\"/><br/> \r\n                     <Skeleton variant=\"rect\" width=\"100%\" animation=\"pulse\" height=\"30px\"/><br/> \r\n                     <Skeleton variant=\"rect\" width=\"100%\" height=\"20px\"/><br/> \r\n                  \r\n                </Grid> \r\n                <Grid item xs={12} sm={6} md={4} lg={4}>\r\n                     <Skeleton variant=\"rect\" width=\"100%\" animation=\"pulse\" height=\"50px\"/><br/> \r\n                     <Skeleton variant=\"rect\" width=\"100%\" animation=\"pulse\" height=\"30px\"/><br/> \r\n                     <Skeleton variant=\"rect\" width=\"100%\" height=\"20px\"/><br/> \r\n                  \r\n                </Grid>\r\n            </Grid>\r\n             <br/><br/><br/>\r\n             <Grid container spacing={5}>\r\n                 <Grid item xs={12} sm={8} md={4} lg={4}>\r\n                     <div>\r\n                        <Skeleton variant=\"rect\" width=\"90%\" animation=\"pulse\" height=\"20px\"/><br/> \r\n                        <Skeleton variant=\"rect\" width=\"70%\"  animation=\"wave\" height=\"20px\"/><br/> \r\n                        <Skeleton variant=\"rect\" width=\"40%\" animation=\"pulse\" height=\"20px\"/><br/> \r\n                        <Skeleton variant=\"rect\" width=\"100%\" animation=\"wave\" height=\"20px\"/><br/> \r\n                    \r\n                     </div>\r\n                 </Grid>\r\n                 <Grid item xs={12} sm={8} md={4} lg={4}>\r\n                     <div>\r\n                     <Skeleton variant=\"rect\" width=\"90%\" animation=\"pulse\" height=\"20px\"/><br/> \r\n                     <Skeleton variant=\"rect\" width=\"70%\"  animation=\"wave\" height=\"20px\"/><br/> \r\n                     <Skeleton variant=\"rect\" width=\"40%\" animation=\"pulse\" height=\"20px\"/><br/> \r\n                     <Skeleton variant=\"rect\" width=\"100%\" animation=\"wave\" height=\"20px\"/><br/> \r\n                    \r\n\r\n                     </div>\r\n                 </Grid>\r\n                 <Grid item xs={12} sm={8} md={4} lg={4}>\r\n                     <div>\r\n                     <Skeleton variant=\"rect\" width=\"90%\" animation=\"pulse\" height=\"20px\"/><br/> \r\n                     <Skeleton variant=\"rect\" width=\"70%\"  animation=\"wave\" height=\"20px\"/><br/> \r\n                     <Skeleton variant=\"rect\" width=\"40%\" animation=\"pulse\" height=\"20px\"/><br/> \r\n                     <Skeleton variant=\"rect\" width=\"100%\" animation=\"wave\" height=\"20px\"/><br/> \r\n                    \r\n\r\n                     </div>\r\n                 </Grid>\r\n             </Grid>\r\n        </div>\r\n    \r\n\r\n    return(\r\n        <Container>\r\n        \r\n                 <br/><br/>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={8} md={8} lg={8}>\r\n                     \r\n                     <Skeleton variant=\"rect\" width=\"100%\" animation=\"pulse\" height=\"50px\"/><br/> \r\n                     <Skeleton variant=\"rect\" width=\"100%\" animation=\"wave\" height=\"30px\"/><br/> \r\n                     <Skeleton variant=\"rect\" width=\"100%\" height=\"20px\"/><br/> \r\n                  \r\n                </Grid>\r\n                <Grid item  xs={4} sm={3} md={1} lg={1}>\r\n                   <Skeleton variant=\"circle\" width=\"50px\" height=\"50px\"/>\r\n                </Grid>\r\n                <Grid item  xs={4} sm={3} md={1} lg={1}>\r\n                   <Skeleton variant=\"circle\" width=\"50px\" height=\"50px\"/>\r\n                </Grid>\r\n                <Grid item  xs={4} sm={3} md={1} lg={1}>\r\n                   <Skeleton variant=\"circle\" width=\"50px\" height=\"50px\"/>\r\n                </Grid>\r\n                <Grid item  xs={4} sm={3} md={1} lg={1}>\r\n                   <Skeleton variant=\"circle\" width=\"50px\" height=\"50px\"/>\r\n                </Grid>\r\n               \r\n            </Grid>\r\n            <Grid container spacing={2} >\r\n               <Grid item sx= {3} sm={2} md={2} lg={2} >\r\n                   <Skeleton variant=\"rect\" width=\"100%\" animation=\"pulse\" height=\"50px\"/><br/> \r\n               </Grid>&nbsp;&nbsp;\r\n               <Grid item sx= {3} sm={2} md={4} lg={4}  >\r\n                  <Skeleton variant=\"rect\" width=\"100%\" animation=\"wave\" height=\"50px\"/><br/> \r\n               </Grid>\r\n           </Grid>\r\n           <Skeleton/>\r\n           <br/><br/>\r\n           {jsx_body}\r\n\r\n        \r\n \r\n             \r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\nexport default detailspageSkelaton\r\n\r\n","D:\\projects\\clients\\Noman Ahamed\\server_management\\src\\components\\servers\\vultr\\TableSkeleton.jsx",["398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413"],"import React ,{useState} from 'react'\r\n\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport {IconButton, Divider, Grid} from '@material-ui/core' \r\n\r\n\r\n\r\n\r\n\r\nconst ServerTableSkeleton = (props)=>{\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    \r\n    const  createData= () =>{\r\n        const server_data =<div>\r\n             <Skeleton variant=\"rect\" width=\"70%\" animation=\"pulse\" height=\"50px\"/><br/> \r\n             <Skeleton variant=\"rect\" width=\"100%\" animation=\"wave\" height=\"30px\"/>\r\n        </div>\r\n        \r\n        const location =  <Skeleton variant=\"rect\" width=\"100%\" animation=\"wave\" height=\"30px\"/>\r\n        \r\n        const expire_date =<div>\r\n              <Skeleton variant=\"rect\" width=\"70%\" animation=\"pulse\" height=\"40px\"/><br/> \r\n            </div> \r\n       \r\n        const action = <div>\r\n            <Skeleton variant=\"circle\" width=\"50px\" height=\"50px\"/>\r\n            <Skeleton variant=\"circle\" width=\"50px\" height=\"50px\"/>\r\n        </div>\r\n        \r\n        const status = <div>\r\n               <Skeleton variant=\"rect\" width=\"70%\" animation=\"pulse\" height=\"40px\"/><br/> \r\n            </div>\r\n            \r\n        return {server_data, location, expire_date ,status, action};\r\n    }\r\n\r\n  \r\n\r\n    const rows = []\r\n    rows.push(createData)\r\n    rows.push(createData)\r\n    rows.push(createData)\r\n\r\n    \r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n    let jsxBody = \r\n    <Grid container spacing={2} >\r\n         <Grid item sx= {6} sm={6} md={3} lg={3} >\r\n             <Skeleton variant=\"rect\" width=\"100%\" animation=\"pulse\" height=\"50px\"/><br/> \r\n         </Grid>\r\n         <Grid item sx= {6} sm={6} md={3} lg={3}  >\r\n             <Skeleton variant=\"rect\" width=\"100%\" animation=\"wave\" height=\"50px\"/><br/> \r\n         </Grid>\r\n         <Grid item sx= {6} sm={6} md={3} lg={3}  >\r\n             <Skeleton variant=\"rect\" width=\"100%\" animation=\"pulse\" height=\"50px\"/><br/> \r\n         </Grid>\r\n         <Grid item sx= {6} sm={6} md={3} lg={3}  >\r\n             <Skeleton variant=\"rect\" width=\"100%\" animation=\"wave\" height=\"50px\"/><br/> \r\n         </Grid>\r\n    </Grid>\r\n    return(\r\n\r\n        <div><br/>\r\n           \r\n        {/* <Skeleton variant=\"rect\" width=\"100%\" animation=\"pulse\" height=\"80px\"/><br/>\r\n        <Skeleton variant=\"rect\" width=\"100%\" animation=\"wave\" /><br/> \r\n        <Skeleton variant=\"rect\" width=\"100%\" animation=\"wave\" /><br/>  */}\r\n        <Typography variant=\"h4\" \r\n            style={{textAlign:\"left\",color:\"#007bfc\", fontWeight:\"bolder\",  width:\"100%\", background:\"linear-gradient(90deg, rgba(224,224,224,100) 0%, rgba(255,255,255,0) 70%)\", padding:\"20px\", borderRadius:\"10px\"}}>Server table </Typography><br/>\r\n                \r\n                <Grid container spacing={2} >\r\n               <Grid item sx= {3} sm={2} md={1} lg={1}>\r\n                  <p className=\"Profile_Tab\"  >Vultr</p>\r\n               </Grid>&nbsp;&nbsp;\r\n               <Grid item sx= {3} sm={2} md={1} lg={1}  >\r\n                  <p className=\"Profile_Tab\"  >Other</p>\r\n               </Grid>\r\n           </Grid>\r\n               <Skeleton style={{marginTop:\"-6px\"}}/> <br/> <br/>\r\n            {/* <Grid container spacing={2} >\r\n               <Grid item sx= {3} sm={2} md={2} lg={2} >\r\n                   <Skeleton variant=\"rect\" width=\"100%\" animation=\"pulse\" height=\"50px\"/><br/> \r\n               </Grid>&nbsp;&nbsp;\r\n               <Grid item sx= {3} sm={2} md={4} lg={4}  >\r\n                  <Skeleton variant=\"rect\" width=\"100%\" animation=\"wave\" height=\"50px\"/><br/> \r\n               </Grid>\r\n           </Grid> */}\r\n           <Skeleton/>\r\n           <Skeleton/><br/><br/>\r\n            {jsxBody}\r\n           <Skeleton height=\"4px\"/><br/>\r\n\r\n            {jsxBody}<br/>\r\n           <Skeleton height=\"4px\"/><br/>\r\n\r\n            {jsxBody}\r\n            <Skeleton height=\"4px\"/><br/>\r\n             \r\n            <br/>\r\n            \r\n\r\n             <Paper >\r\n    \r\n            </Paper>\r\n      \r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ServerTableSkeleton\r\n",{"ruleId":"414","replacedBy":"415"},{"ruleId":"416","replacedBy":"417"},{"ruleId":"418","severity":1,"message":"419","line":26,"column":10,"nodeType":"420","messageId":"421","endLine":26,"endColumn":17},{"ruleId":"422","severity":1,"message":"423","line":32,"column":5,"nodeType":"424","endLine":32,"endColumn":7,"suggestions":"425"},{"ruleId":"418","severity":1,"message":"426","line":2,"column":20,"nodeType":"420","messageId":"421","endLine":2,"endColumn":24},{"ruleId":"418","severity":1,"message":"427","line":10,"column":8,"nodeType":"420","messageId":"421","endLine":10,"endColumn":15},{"ruleId":"418","severity":1,"message":"428","line":13,"column":8,"nodeType":"420","messageId":"421","endLine":13,"endColumn":23},{"ruleId":"418","severity":1,"message":"429","line":14,"column":8,"nodeType":"420","messageId":"421","endLine":14,"endColumn":24},{"ruleId":"418","severity":1,"message":"430","line":15,"column":8,"nodeType":"420","messageId":"421","endLine":15,"endColumn":16},{"ruleId":"418","severity":1,"message":"431","line":16,"column":8,"nodeType":"420","messageId":"421","endLine":16,"endColumn":20},{"ruleId":"418","severity":1,"message":"432","line":17,"column":8,"nodeType":"420","messageId":"421","endLine":17,"endColumn":20},{"ruleId":"418","severity":1,"message":"433","line":18,"column":10,"nodeType":"420","messageId":"421","endLine":18,"endColumn":17},{"ruleId":"418","severity":1,"message":"434","line":19,"column":8,"nodeType":"420","messageId":"421","endLine":19,"endColumn":18},{"ruleId":"418","severity":1,"message":"435","line":21,"column":8,"nodeType":"420","messageId":"421","endLine":21,"endColumn":21},{"ruleId":"436","severity":1,"message":"437","line":20,"column":9,"nodeType":"438","messageId":"439","endLine":20,"endColumn":14},{"ruleId":"418","severity":1,"message":"440","line":41,"column":12,"nodeType":"420","messageId":"421","endLine":41,"endColumn":21},{"ruleId":"418","severity":1,"message":"441","line":92,"column":11,"nodeType":"420","messageId":"421","endLine":92,"endColumn":20},{"ruleId":"442","severity":1,"message":"443","line":99,"column":5,"nodeType":"444","messageId":"445","endLine":99,"endColumn":152},{"ruleId":"418","severity":1,"message":"427","line":2,"column":8,"nodeType":"420","messageId":"421","endLine":2,"endColumn":15},{"ruleId":"418","severity":1,"message":"431","line":5,"column":8,"nodeType":"420","messageId":"421","endLine":5,"endColumn":20},{"ruleId":"418","severity":1,"message":"432","line":6,"column":8,"nodeType":"420","messageId":"421","endLine":6,"endColumn":20},{"ruleId":"418","severity":1,"message":"446","line":11,"column":8,"nodeType":"420","messageId":"421","endLine":11,"endColumn":23},{"ruleId":"418","severity":1,"message":"447","line":13,"column":8,"nodeType":"420","messageId":"421","endLine":13,"endColumn":20},{"ruleId":"418","severity":1,"message":"448","line":15,"column":8,"nodeType":"420","messageId":"421","endLine":15,"endColumn":20},{"ruleId":"418","severity":1,"message":"449","line":17,"column":8,"nodeType":"420","messageId":"421","endLine":17,"endColumn":23},{"ruleId":"418","severity":1,"message":"426","line":4,"column":9,"nodeType":"420","messageId":"421","endLine":4,"endColumn":13},{"ruleId":"418","severity":1,"message":"450","line":4,"column":23,"nodeType":"420","messageId":"421","endLine":4,"endColumn":32},{"ruleId":"418","severity":1,"message":"433","line":5,"column":10,"nodeType":"420","messageId":"421","endLine":5,"endColumn":17},{"ruleId":"418","severity":1,"message":"451","line":6,"column":3,"nodeType":"420","messageId":"421","endLine":6,"endColumn":14},{"ruleId":"418","severity":1,"message":"452","line":10,"column":20,"nodeType":"420","messageId":"421","endLine":10,"endColumn":30},{"ruleId":"418","severity":1,"message":"453","line":12,"column":8,"nodeType":"420","messageId":"421","endLine":12,"endColumn":18},{"ruleId":"418","severity":1,"message":"454","line":22,"column":10,"nodeType":"420","messageId":"421","endLine":22,"endColumn":17},{"ruleId":"422","severity":1,"message":"455","line":24,"column":8,"nodeType":"424","endLine":24,"endColumn":10,"suggestions":"456"},{"ruleId":"418","severity":1,"message":"457","line":3,"column":26,"nodeType":"420","messageId":"421","endLine":3,"endColumn":31},{"ruleId":"422","severity":1,"message":"455","line":33,"column":7,"nodeType":"424","endLine":33,"endColumn":9,"suggestions":"458"},{"ruleId":"459","severity":1,"message":"460","line":70,"column":38,"nodeType":"461","messageId":"462","endLine":70,"endColumn":44},{"ruleId":"418","severity":1,"message":"457","line":3,"column":26,"nodeType":"420","messageId":"421","endLine":3,"endColumn":31},{"ruleId":"422","severity":1,"message":"455","line":33,"column":7,"nodeType":"424","endLine":33,"endColumn":9,"suggestions":"463"},{"ruleId":"459","severity":1,"message":"460","line":66,"column":38,"nodeType":"461","messageId":"462","endLine":66,"endColumn":44},{"ruleId":"422","severity":1,"message":"455","line":33,"column":7,"nodeType":"424","endLine":33,"endColumn":9,"suggestions":"464"},{"ruleId":"418","severity":1,"message":"452","line":3,"column":20,"nodeType":"420","messageId":"421","endLine":3,"endColumn":30},{"ruleId":"418","severity":1,"message":"427","line":3,"column":32,"nodeType":"420","messageId":"421","endLine":3,"endColumn":39},{"ruleId":"465","severity":1,"message":"466","line":9,"column":13,"nodeType":"467","endLine":9,"endColumn":27},{"ruleId":"418","severity":1,"message":"468","line":7,"column":8,"nodeType":"420","messageId":"421","endLine":7,"endColumn":14},{"ruleId":"418","severity":1,"message":"469","line":15,"column":8,"nodeType":"420","messageId":"421","endLine":15,"endColumn":17},{"ruleId":"418","severity":1,"message":"470","line":17,"column":8,"nodeType":"420","messageId":"421","endLine":17,"endColumn":18},{"ruleId":"418","severity":1,"message":"471","line":18,"column":8,"nodeType":"420","messageId":"421","endLine":18,"endColumn":18},{"ruleId":"422","severity":1,"message":"455","line":78,"column":7,"nodeType":"424","endLine":78,"endColumn":9,"suggestions":"472"},{"ruleId":"418","severity":1,"message":"473","line":8,"column":8,"nodeType":"420","messageId":"421","endLine":8,"endColumn":17},{"ruleId":"418","severity":1,"message":"474","line":9,"column":8,"nodeType":"420","messageId":"421","endLine":9,"endColumn":18},{"ruleId":"418","severity":1,"message":"475","line":10,"column":8,"nodeType":"420","messageId":"421","endLine":10,"endColumn":16},{"ruleId":"418","severity":1,"message":"430","line":14,"column":8,"nodeType":"420","messageId":"421","endLine":14,"endColumn":16},{"ruleId":"418","severity":1,"message":"433","line":15,"column":10,"nodeType":"420","messageId":"421","endLine":15,"endColumn":17},{"ruleId":"418","severity":1,"message":"476","line":63,"column":11,"nodeType":"420","messageId":"421","endLine":63,"endColumn":17},{"ruleId":"418","severity":1,"message":"469","line":2,"column":25,"nodeType":"420","messageId":"421","endLine":2,"endColumn":34},{"ruleId":"459","severity":1,"message":"460","line":74,"column":50,"nodeType":"461","messageId":"462","endLine":74,"endColumn":56},{"ruleId":"418","severity":1,"message":"477","line":1,"column":16,"nodeType":"420","messageId":"421","endLine":1,"endColumn":24},{"ruleId":"418","severity":1,"message":"469","line":2,"column":25,"nodeType":"420","messageId":"421","endLine":2,"endColumn":34},{"ruleId":"459","severity":1,"message":"460","line":12,"column":41,"nodeType":"461","messageId":"462","endLine":12,"endColumn":47},{"ruleId":"478","severity":1,"message":"479","line":23,"column":23,"nodeType":"467","endLine":23,"endColumn":120},{"ruleId":"418","severity":1,"message":"477","line":1,"column":17,"nodeType":"420","messageId":"421","endLine":1,"endColumn":25},{"ruleId":"418","severity":1,"message":"480","line":1,"column":27,"nodeType":"420","messageId":"421","endLine":1,"endColumn":36},{"ruleId":"418","severity":1,"message":"427","line":3,"column":45,"nodeType":"420","messageId":"421","endLine":3,"endColumn":52},{"ruleId":"459","severity":1,"message":"460","line":11,"column":42,"nodeType":"461","messageId":"462","endLine":11,"endColumn":48},{"ruleId":"418","severity":1,"message":"477","line":1,"column":15,"nodeType":"420","messageId":"421","endLine":1,"endColumn":23},{"ruleId":"418","severity":1,"message":"481","line":1,"column":24,"nodeType":"420","messageId":"421","endLine":1,"endColumn":30},{"ruleId":"418","severity":1,"message":"480","line":1,"column":16,"nodeType":"420","messageId":"421","endLine":1,"endColumn":25},{"ruleId":"418","severity":1,"message":"469","line":5,"column":9,"nodeType":"420","messageId":"421","endLine":5,"endColumn":18},{"ruleId":"418","severity":1,"message":"426","line":5,"column":20,"nodeType":"420","messageId":"421","endLine":5,"endColumn":24},{"ruleId":"418","severity":1,"message":"452","line":5,"column":33,"nodeType":"420","messageId":"421","endLine":5,"endColumn":43},{"ruleId":"418","severity":1,"message":"427","line":5,"column":45,"nodeType":"420","messageId":"421","endLine":5,"endColumn":52},{"ruleId":"418","severity":1,"message":"482","line":10,"column":12,"nodeType":"420","messageId":"421","endLine":10,"endColumn":20},{"ruleId":"418","severity":1,"message":"483","line":10,"column":22,"nodeType":"420","messageId":"421","endLine":10,"endColumn":33},{"ruleId":"418","severity":1,"message":"484","line":13,"column":12,"nodeType":"420","messageId":"421","endLine":13,"endColumn":22},{"ruleId":"418","severity":1,"message":"485","line":13,"column":24,"nodeType":"420","messageId":"421","endLine":13,"endColumn":36},{"ruleId":"418","severity":1,"message":"486","line":15,"column":12,"nodeType":"420","messageId":"421","endLine":15,"endColumn":17},{"ruleId":"418","severity":1,"message":"487","line":15,"column":19,"nodeType":"420","messageId":"421","endLine":15,"endColumn":28},{"ruleId":"418","severity":1,"message":"452","line":4,"column":41,"nodeType":"420","messageId":"421","endLine":4,"endColumn":51},{"ruleId":"422","severity":1,"message":"455","line":33,"column":7,"nodeType":"424","endLine":33,"endColumn":9,"suggestions":"488"},{"ruleId":"414","replacedBy":"489"},{"ruleId":"416","replacedBy":"490"},{"ruleId":"418","severity":1,"message":"491","line":2,"column":8,"nodeType":"420","messageId":"421","endLine":2,"endColumn":13},{"ruleId":"418","severity":1,"message":"492","line":3,"column":9,"nodeType":"420","messageId":"421","endLine":3,"endColumn":16},{"ruleId":"418","severity":1,"message":"468","line":4,"column":20,"nodeType":"420","messageId":"421","endLine":4,"endColumn":26},{"ruleId":"418","severity":1,"message":"426","line":4,"column":37,"nodeType":"420","messageId":"421","endLine":4,"endColumn":41},{"ruleId":"418","severity":1,"message":"457","line":4,"column":43,"nodeType":"420","messageId":"421","endLine":4,"endColumn":48},{"ruleId":"418","severity":1,"message":"493","line":6,"column":8,"nodeType":"420","messageId":"421","endLine":6,"endColumn":24},{"ruleId":"418","severity":1,"message":"494","line":11,"column":8,"nodeType":"420","messageId":"421","endLine":11,"endColumn":26},{"ruleId":"418","severity":1,"message":"495","line":12,"column":8,"nodeType":"420","messageId":"421","endLine":12,"endColumn":25},{"ruleId":"418","severity":1,"message":"496","line":13,"column":8,"nodeType":"420","messageId":"421","endLine":13,"endColumn":30},{"ruleId":"418","severity":1,"message":"497","line":14,"column":8,"nodeType":"420","messageId":"421","endLine":14,"endColumn":26},{"ruleId":"418","severity":1,"message":"498","line":35,"column":11,"nodeType":"420","messageId":"421","endLine":35,"endColumn":18},{"ruleId":"418","severity":1,"message":"499","line":36,"column":12,"nodeType":"420","messageId":"421","endLine":36,"endColumn":16},{"ruleId":"418","severity":1,"message":"500","line":36,"column":18,"nodeType":"420","messageId":"421","endLine":36,"endColumn":25},{"ruleId":"418","severity":1,"message":"486","line":38,"column":12,"nodeType":"420","messageId":"421","endLine":38,"endColumn":17},{"ruleId":"418","severity":1,"message":"501","line":38,"column":19,"nodeType":"420","messageId":"421","endLine":38,"endColumn":27},{"ruleId":"418","severity":1,"message":"484","line":39,"column":12,"nodeType":"420","messageId":"421","endLine":39,"endColumn":22},{"ruleId":"418","severity":1,"message":"485","line":39,"column":24,"nodeType":"420","messageId":"421","endLine":39,"endColumn":36},{"ruleId":"418","severity":1,"message":"502","line":40,"column":12,"nodeType":"420","messageId":"421","endLine":40,"endColumn":24},{"ruleId":"418","severity":1,"message":"503","line":40,"column":26,"nodeType":"420","messageId":"421","endLine":40,"endColumn":40},{"ruleId":"418","severity":1,"message":"504","line":41,"column":12,"nodeType":"420","messageId":"421","endLine":41,"endColumn":17},{"ruleId":"418","severity":1,"message":"505","line":41,"column":19,"nodeType":"420","messageId":"421","endLine":41,"endColumn":27},{"ruleId":"418","severity":1,"message":"506","line":42,"column":12,"nodeType":"420","messageId":"421","endLine":42,"endColumn":20},{"ruleId":"418","severity":1,"message":"507","line":42,"column":22,"nodeType":"420","messageId":"421","endLine":42,"endColumn":33},{"ruleId":"418","severity":1,"message":"508","line":43,"column":12,"nodeType":"420","messageId":"421","endLine":43,"endColumn":17},{"ruleId":"418","severity":1,"message":"509","line":43,"column":19,"nodeType":"420","messageId":"421","endLine":43,"endColumn":27},{"ruleId":"418","severity":1,"message":"510","line":44,"column":12,"nodeType":"420","messageId":"421","endLine":44,"endColumn":19},{"ruleId":"418","severity":1,"message":"511","line":44,"column":21,"nodeType":"420","messageId":"421","endLine":44,"endColumn":32},{"ruleId":"418","severity":1,"message":"512","line":45,"column":12,"nodeType":"420","messageId":"421","endLine":45,"endColumn":19},{"ruleId":"418","severity":1,"message":"513","line":45,"column":21,"nodeType":"420","messageId":"421","endLine":45,"endColumn":31},{"ruleId":"465","severity":1,"message":"514","line":54,"column":13,"nodeType":"467","endLine":58,"endColumn":16},{"ruleId":"418","severity":1,"message":"468","line":6,"column":26,"nodeType":"420","messageId":"421","endLine":6,"endColumn":32},{"ruleId":"418","severity":1,"message":"515","line":35,"column":8,"nodeType":"420","messageId":"421","endLine":35,"endColumn":27},{"ruleId":"418","severity":1,"message":"504","line":61,"column":12,"nodeType":"420","messageId":"421","endLine":61,"endColumn":17},{"ruleId":"418","severity":1,"message":"505","line":61,"column":19,"nodeType":"420","messageId":"421","endLine":61,"endColumn":27},{"ruleId":"422","severity":1,"message":"516","line":70,"column":8,"nodeType":"424","endLine":70,"endColumn":10,"suggestions":"517"},{"ruleId":"418","severity":1,"message":"509","line":7,"column":18,"nodeType":"420","messageId":"421","endLine":7,"endColumn":26},{"ruleId":"418","severity":1,"message":"452","line":4,"column":41,"nodeType":"420","messageId":"421","endLine":4,"endColumn":51},{"ruleId":"422","severity":1,"message":"455","line":35,"column":7,"nodeType":"424","endLine":35,"endColumn":9,"suggestions":"518"},{"ruleId":"418","severity":1,"message":"468","line":12,"column":8,"nodeType":"420","messageId":"421","endLine":12,"endColumn":14},{"ruleId":"418","severity":1,"message":"469","line":20,"column":8,"nodeType":"420","messageId":"421","endLine":20,"endColumn":17},{"ruleId":"418","severity":1,"message":"519","line":22,"column":8,"nodeType":"420","messageId":"421","endLine":22,"endColumn":22},{"ruleId":"418","severity":1,"message":"520","line":23,"column":8,"nodeType":"420","messageId":"421","endLine":23,"endColumn":22},{"ruleId":"418","severity":1,"message":"521","line":24,"column":8,"nodeType":"420","messageId":"421","endLine":24,"endColumn":16},{"ruleId":"418","severity":1,"message":"522","line":26,"column":8,"nodeType":"420","messageId":"421","endLine":26,"endColumn":16},{"ruleId":"418","severity":1,"message":"523","line":50,"column":8,"nodeType":"420","messageId":"421","endLine":50,"endColumn":25},{"ruleId":"418","severity":1,"message":"524","line":139,"column":12,"nodeType":"420","messageId":"421","endLine":139,"endColumn":25},{"ruleId":"422","severity":1,"message":"525","line":146,"column":7,"nodeType":"424","endLine":146,"endColumn":9,"suggestions":"526"},{"ruleId":"418","severity":1,"message":"527","line":271,"column":11,"nodeType":"420","messageId":"421","endLine":271,"endColumn":31},{"ruleId":"459","severity":1,"message":"528","line":411,"column":42,"nodeType":"529","messageId":"530","endLine":411,"endColumn":44},{"ruleId":"418","severity":1,"message":"468","line":7,"column":8,"nodeType":"420","messageId":"421","endLine":7,"endColumn":14},{"ruleId":"418","severity":1,"message":"480","line":1,"column":27,"nodeType":"420","messageId":"421","endLine":1,"endColumn":36},{"ruleId":"418","severity":1,"message":"426","line":5,"column":37,"nodeType":"420","messageId":"421","endLine":5,"endColumn":41},{"ruleId":"418","severity":1,"message":"457","line":5,"column":43,"nodeType":"420","messageId":"421","endLine":5,"endColumn":48},{"ruleId":"418","severity":1,"message":"500","line":40,"column":18,"nodeType":"420","messageId":"421","endLine":40,"endColumn":25},{"ruleId":"418","severity":1,"message":"531","line":42,"column":25,"nodeType":"420","messageId":"421","endLine":42,"endColumn":38},{"ruleId":"418","severity":1,"message":"501","line":46,"column":19,"nodeType":"420","messageId":"421","endLine":46,"endColumn":27},{"ruleId":"418","severity":1,"message":"506","line":51,"column":12,"nodeType":"420","messageId":"421","endLine":51,"endColumn":20},{"ruleId":"418","severity":1,"message":"507","line":51,"column":22,"nodeType":"420","messageId":"421","endLine":51,"endColumn":33},{"ruleId":"465","severity":1,"message":"514","line":149,"column":13,"nodeType":"467","endLine":154,"endColumn":16},{"ruleId":"465","severity":1,"message":"532","line":160,"column":13,"nodeType":"467","endLine":165,"endColumn":15},{"ruleId":"465","severity":1,"message":"533","line":171,"column":13,"nodeType":"467","endLine":178,"endColumn":15},{"ruleId":"465","severity":1,"message":"534","line":183,"column":13,"nodeType":"467","endLine":188,"endColumn":15},{"ruleId":"418","severity":1,"message":"468","line":7,"column":8,"nodeType":"420","messageId":"421","endLine":7,"endColumn":14},{"ruleId":"418","severity":1,"message":"452","line":4,"column":41,"nodeType":"420","messageId":"421","endLine":4,"endColumn":51},{"ruleId":"422","severity":1,"message":"455","line":35,"column":7,"nodeType":"424","endLine":35,"endColumn":9,"suggestions":"535"},{"ruleId":"418","severity":1,"message":"480","line":1,"column":16,"nodeType":"420","messageId":"421","endLine":1,"endColumn":25},{"ruleId":"418","severity":1,"message":"477","line":1,"column":27,"nodeType":"420","messageId":"421","endLine":1,"endColumn":35},{"ruleId":"418","severity":1,"message":"468","line":3,"column":26,"nodeType":"420","messageId":"421","endLine":3,"endColumn":32},{"ruleId":"418","severity":1,"message":"427","line":3,"column":34,"nodeType":"420","messageId":"421","endLine":3,"endColumn":41},{"ruleId":"418","severity":1,"message":"453","line":3,"column":43,"nodeType":"420","messageId":"421","endLine":3,"endColumn":53},{"ruleId":"418","severity":1,"message":"468","line":7,"column":8,"nodeType":"420","messageId":"421","endLine":7,"endColumn":14},{"ruleId":"418","severity":1,"message":"536","line":8,"column":8,"nodeType":"420","messageId":"421","endLine":8,"endColumn":13},{"ruleId":"418","severity":1,"message":"537","line":9,"column":8,"nodeType":"420","messageId":"421","endLine":9,"endColumn":17},{"ruleId":"418","severity":1,"message":"538","line":10,"column":8,"nodeType":"420","messageId":"421","endLine":10,"endColumn":17},{"ruleId":"418","severity":1,"message":"539","line":11,"column":8,"nodeType":"420","messageId":"421","endLine":11,"endColumn":22},{"ruleId":"418","severity":1,"message":"540","line":12,"column":8,"nodeType":"420","messageId":"421","endLine":12,"endColumn":17},{"ruleId":"418","severity":1,"message":"541","line":13,"column":8,"nodeType":"420","messageId":"421","endLine":13,"endColumn":23},{"ruleId":"418","severity":1,"message":"542","line":14,"column":8,"nodeType":"420","messageId":"421","endLine":14,"endColumn":16},{"ruleId":"418","severity":1,"message":"469","line":15,"column":8,"nodeType":"420","messageId":"421","endLine":15,"endColumn":17},{"ruleId":"418","severity":1,"message":"521","line":17,"column":8,"nodeType":"420","messageId":"421","endLine":17,"endColumn":16},{"ruleId":"418","severity":1,"message":"453","line":18,"column":9,"nodeType":"420","messageId":"421","endLine":18,"endColumn":19},{"ruleId":"418","severity":1,"message":"427","line":18,"column":21,"nodeType":"420","messageId":"421","endLine":18,"endColumn":28},{"ruleId":"418","severity":1,"message":"543","line":25,"column":12,"nodeType":"420","messageId":"421","endLine":25,"endColumn":16},{"ruleId":"418","severity":1,"message":"544","line":26,"column":12,"nodeType":"420","messageId":"421","endLine":26,"endColumn":23},{"ruleId":"418","severity":1,"message":"545","line":60,"column":9,"nodeType":"420","messageId":"421","endLine":60,"endColumn":25},{"ruleId":"418","severity":1,"message":"546","line":64,"column":9,"nodeType":"420","messageId":"421","endLine":64,"endColumn":32},"no-native-reassign",["547"],"no-negated-in-lhs",["548"],"no-unused-vars","'Payment' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["549"],"'Grid' is defined but never used.","'Divider' is defined but never used.","'ChevronLeftIcon' is defined but never used.","'ChevronRightIcon' is defined but never used.","'ListItem' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'NavLink' is defined but never used.","'VpnKeyIcon' is defined but never used.","'ExitToAppIcon' is defined but never used.","no-dupe-keys","Duplicate key 'width'.","ObjectExpression","unexpected","'hasErrors' is assigned a value but never used.","'errorBody' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'InsertChartIcon' is defined but never used.","'LocalAtmIcon' is defined but never used.","'ComputerIcon' is defined but never used.","'FilterDramaIcon' is defined but never used.","'TextField' is defined but never used.","'NavbarBrand' is defined but never used.","'Typography' is defined but never used.","'IconButton' is defined but never used.","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.token'. Either include it or remove the dependency array.",["550"],"'Paper' is defined but never used.",["551"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue",["552"],["553"],"react/jsx-pascal-case","Imported JSX component Add_Payment must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'Button' is defined but never used.","'Container' is defined but never used.","'ZoomInIcon' is defined but never used.","'DeleteIcon' is defined but never used.",["554"],"'InboxIcon' is defined but never used.","'DraftsIcon' is defined but never used.","'SendIcon' is defined but never used.","'button' is assigned a value but never used.","'useState' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'packages' is assigned a value but never used.","'setPackages' is assigned a value but never used.","'package_id' is assigned a value but never used.","'setPackageId' is assigned a value but never used.","'route' is assigned a value but never used.","'setRooute' is assigned a value but never used.",["555"],["547"],["548"],"'axios' is defined but never used.","'connect' is defined but never used.","'CircularProgress' is defined but never used.","'SnapShot_Component' is defined but never used.","'Pakcage_Component' is defined but never used.","'Serverinputs_Component' is defined but never used.","'ServerCreatedModal' is defined but never used.","'classes' is assigned a value but never used.","'OSID' is assigned a value but never used.","'setOSID' is assigned a value but never used.","'setRoute' is assigned a value but never used.","'billing_type' is assigned a value but never used.","'setBillingType' is assigned a value but never used.","'label' is assigned a value but never used.","'setLabel' is assigned a value but never used.","'hostname' is assigned a value but never used.","'setHostname' is assigned a value but never used.","'modal' is assigned a value but never used.","'setModal' is assigned a value but never used.","'spinner' is assigned a value but never used.","'setSprinner' is assigned a value but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","Imported JSX component Location_Component must be in PascalCase or SCREAMING_SNAKE_CASE","'ServerTableSkeleton' is defined but never used.","React Hook useEffect has a missing dependency: 'getServerDetails'. Either include it or remove the dependency array.",["556"],["557"],"'ZoomOutMapIcon' is defined but never used.","'RotateLeftIcon' is defined but never used.","'EditIcon' is defined but never used.","'RedoIcon' is defined but never used.","'ServerRouteFilter' is defined but never used.","'routeProvider' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getServers' and 'route'. Either include them or remove the dependency array.",["558"],"'restartServerHandler' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'setServerType' is assigned a value but never used.","Imported JSX component SnapShot_Component must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Pakcage_Component must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Serverinputs_Component must be in PascalCase or SCREAMING_SNAKE_CASE",["559"],"'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'TablePagination' is defined but never used.","'TableRow' is defined but never used.","'page' is assigned a value but never used.","'rowsPerPage' is assigned a value but never used.","'handleChangePage' is assigned a value but never used.","'handleChangeRowsPerPage' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"560","fix":"561"},{"desc":"562","fix":"563"},{"desc":"562","fix":"564"},{"desc":"562","fix":"565"},{"desc":"562","fix":"566"},{"desc":"562","fix":"567"},{"desc":"562","fix":"568"},{"desc":"569","fix":"570"},{"desc":"562","fix":"571"},{"desc":"572","fix":"573"},{"desc":"562","fix":"574"},"Update the dependencies array to be: [props]",{"range":"575","text":"576"},"Update the dependencies array to be: [props.token]",{"range":"577","text":"578"},{"range":"579","text":"578"},{"range":"580","text":"578"},{"range":"581","text":"578"},{"range":"582","text":"578"},{"range":"583","text":"578"},"Update the dependencies array to be: [getServerDetails]",{"range":"584","text":"585"},{"range":"586","text":"578"},"Update the dependencies array to be: [getServers, route]",{"range":"587","text":"588"},{"range":"589","text":"578"},[1344,1346],"[props]",[906,908],"[props.token]",[1030,1032],[1030,1032],[1137,1139],[2400,2402],[1247,1249],[2785,2787],"[getServerDetails]",[1399,1401],[5418,5420],"[getServers, route]",[1381,1383]]